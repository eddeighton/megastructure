// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: megastructure.proto

#include "megastructure.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHQ_Alive_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHQ_Load_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHS_Buffer_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHS_Enroll_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHS_EnrollEG_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Message_Config_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_Config_Load_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_CHQ_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_HCS_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_MSQ_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_SMS_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_Config_Save_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_CHQ_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_HCS_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_MSQ_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_SMS_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_EG_Msg_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Error_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Event_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_EG_Msg_Request_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Read_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Write_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Response_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCQ_Buffer_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCQ_Enroll_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCQ_EnrollEG_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCS_Alive_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCS_Load_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_MSQ_Alive_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_MSQ_Load_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_MSS_Enroll_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_SMQ_Enroll_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_SMS_Alive_megastructure_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_megastructure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_SMS_Load_megastructure_2eproto;
namespace megastructure {
class Message_SMQ_EnrollDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_SMQ_Enroll> _instance;
} _Message_SMQ_Enroll_default_instance_;
class Message_MSS_EnrollDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_MSS_Enroll> _instance;
} _Message_MSS_Enroll_default_instance_;
class Message_MSQ_AliveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_MSQ_Alive> _instance;
} _Message_MSQ_Alive_default_instance_;
class Message_SMS_AliveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_SMS_Alive> _instance;
} _Message_SMS_Alive_default_instance_;
class Message_HCQ_EnrollDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_HCQ_Enroll> _instance;
} _Message_HCQ_Enroll_default_instance_;
class Message_CHS_EnrollDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_CHS_Enroll> _instance;
} _Message_CHS_Enroll_default_instance_;
class Message_HCQ_EnrollEGDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_HCQ_EnrollEG> _instance;
} _Message_HCQ_EnrollEG_default_instance_;
class Message_CHS_EnrollEGDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_CHS_EnrollEG> _instance;
} _Message_CHS_EnrollEG_default_instance_;
class Message_CHQ_AliveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_CHQ_Alive> _instance;
} _Message_CHQ_Alive_default_instance_;
class Message_HCS_AliveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_HCS_Alive> _instance;
} _Message_HCS_Alive_default_instance_;
class Message_MSQ_LoadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_MSQ_Load> _instance;
} _Message_MSQ_Load_default_instance_;
class Message_SMS_LoadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_SMS_Load> _instance;
} _Message_SMS_Load_default_instance_;
class Message_CHQ_LoadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_CHQ_Load> _instance;
} _Message_CHQ_Load_default_instance_;
class Message_HCS_LoadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_HCS_Load> _instance;
} _Message_HCS_Load_default_instance_;
class Message_HCQ_BufferDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_HCQ_Buffer> _instance;
} _Message_HCQ_Buffer_default_instance_;
class Message_CHS_BufferDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_CHS_Buffer> _instance;
} _Message_CHS_Buffer_default_instance_;
class Message_Config_Load_MSQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Load_MSQ> _instance;
} _Message_Config_Load_MSQ_default_instance_;
class Message_Config_Load_SMSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Load_SMS> _instance;
} _Message_Config_Load_SMS_default_instance_;
class Message_Config_Load_CHQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Load_CHQ> _instance;
} _Message_Config_Load_CHQ_default_instance_;
class Message_Config_Load_HCSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Load_HCS> _instance;
} _Message_Config_Load_HCS_default_instance_;
class Message_Config_LoadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Load> _instance;
  const ::megastructure::Message_Config_Load_MSQ* msq_;
  const ::megastructure::Message_Config_Load_SMS* sms_;
  const ::megastructure::Message_Config_Load_CHQ* chq_;
  const ::megastructure::Message_Config_Load_HCS* hcs_;
} _Message_Config_Load_default_instance_;
class Message_Config_Save_MSQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Save_MSQ> _instance;
} _Message_Config_Save_MSQ_default_instance_;
class Message_Config_Save_SMSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Save_SMS> _instance;
} _Message_Config_Save_SMS_default_instance_;
class Message_Config_Save_CHQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Save_CHQ> _instance;
} _Message_Config_Save_CHQ_default_instance_;
class Message_Config_Save_HCSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Save_HCS> _instance;
} _Message_Config_Save_HCS_default_instance_;
class Message_Config_SaveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config_Save> _instance;
  const ::megastructure::Message_Config_Save_MSQ* msq_;
  const ::megastructure::Message_Config_Save_SMS* sms_;
  const ::megastructure::Message_Config_Save_CHQ* chq_;
  const ::megastructure::Message_Config_Save_HCS* hcs_;
} _Message_Config_Save_default_instance_;
class Message_ConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Config> _instance;
  const ::megastructure::Message_Config_Load* load_;
  const ::megastructure::Message_Config_Save* save_;
} _Message_Config_default_instance_;
class Message_EG_Msg_Request_ReadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Request_Read> _instance;
} _Message_EG_Msg_Request_Read_default_instance_;
class Message_EG_Msg_Request_WriteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Request_Write> _instance;
} _Message_EG_Msg_Request_Write_default_instance_;
class Message_EG_Msg_Request_LockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Request_Lock> _instance;
} _Message_EG_Msg_Request_Lock_default_instance_;
class Message_EG_Msg_Request_UnlockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Request_Unlock> _instance;
} _Message_EG_Msg_Request_Unlock_default_instance_;
class Message_EG_Msg_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Request> _instance;
  const ::megastructure::Message_EG_Msg_Request_Read* read_;
  const ::megastructure::Message_EG_Msg_Request_Write* write_;
  const ::megastructure::Message_EG_Msg_Request_Lock* lock_;
  const ::megastructure::Message_EG_Msg_Request_Unlock* unlock_;
} _Message_EG_Msg_Request_default_instance_;
class Message_EG_Msg_ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Response> _instance;
} _Message_EG_Msg_Response_default_instance_;
class Message_EG_Msg_ErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Error> _instance;
} _Message_EG_Msg_Error_default_instance_;
class Message_EG_Msg_EventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg_Event> _instance;
} _Message_EG_Msg_Event_default_instance_;
class Message_EG_MsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_EG_Msg> _instance;
  const ::megastructure::Message_EG_Msg_Request* request_;
  const ::megastructure::Message_EG_Msg_Response* response_;
  const ::megastructure::Message_EG_Msg_Error* error_;
  const ::megastructure::Message_EG_Msg_Event* event_;
} _Message_EG_Msg_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
  const ::megastructure::Message_SMQ_Enroll* smq_enroll_;
  const ::megastructure::Message_MSS_Enroll* mss_enroll_;
  const ::megastructure::Message_MSQ_Alive* msq_alive_;
  const ::megastructure::Message_SMS_Alive* sms_alive_;
  const ::megastructure::Message_HCQ_Enroll* hcq_enroll_;
  const ::megastructure::Message_CHS_Enroll* chs_enroll_;
  const ::megastructure::Message_HCQ_EnrollEG* hcq_enrolleg_;
  const ::megastructure::Message_CHS_EnrollEG* chs_enrolleg_;
  const ::megastructure::Message_CHQ_Alive* chq_alive_;
  const ::megastructure::Message_HCS_Alive* hcs_alive_;
  const ::megastructure::Message_MSQ_Load* msq_load_;
  const ::megastructure::Message_SMS_Load* sms_load_;
  const ::megastructure::Message_CHQ_Load* chq_load_;
  const ::megastructure::Message_HCS_Load* hcs_load_;
  const ::megastructure::Message_HCQ_Buffer* hcq_buffer_;
  const ::megastructure::Message_CHS_Buffer* chs_buffer_;
  const ::megastructure::Message_Config* config_msg_;
  const ::megastructure::Message_EG_Msg* eg_msg_;
} _Message_default_instance_;
}  // namespace megastructure
static void InitDefaultsscc_info_Message_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_default_instance_;
    new (ptr) ::megastructure::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_Message_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, 0, InitDefaultsscc_info_Message_megastructure_2eproto}, {
      &scc_info_Message_SMQ_Enroll_megastructure_2eproto.base,
      &scc_info_Message_MSS_Enroll_megastructure_2eproto.base,
      &scc_info_Message_MSQ_Alive_megastructure_2eproto.base,
      &scc_info_Message_SMS_Alive_megastructure_2eproto.base,
      &scc_info_Message_HCQ_Enroll_megastructure_2eproto.base,
      &scc_info_Message_CHS_Enroll_megastructure_2eproto.base,
      &scc_info_Message_HCQ_EnrollEG_megastructure_2eproto.base,
      &scc_info_Message_CHS_EnrollEG_megastructure_2eproto.base,
      &scc_info_Message_CHQ_Alive_megastructure_2eproto.base,
      &scc_info_Message_HCS_Alive_megastructure_2eproto.base,
      &scc_info_Message_MSQ_Load_megastructure_2eproto.base,
      &scc_info_Message_SMS_Load_megastructure_2eproto.base,
      &scc_info_Message_CHQ_Load_megastructure_2eproto.base,
      &scc_info_Message_HCS_Load_megastructure_2eproto.base,
      &scc_info_Message_HCQ_Buffer_megastructure_2eproto.base,
      &scc_info_Message_CHS_Buffer_megastructure_2eproto.base,
      &scc_info_Message_Config_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_megastructure_2eproto.base,}};

static void InitDefaultsscc_info_Message_CHQ_Alive_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_CHQ_Alive_default_instance_;
    new (ptr) ::megastructure::Message_CHQ_Alive();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_CHQ_Alive::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHQ_Alive_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_CHQ_Alive_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_CHQ_Load_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_CHQ_Load_default_instance_;
    new (ptr) ::megastructure::Message_CHQ_Load();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_CHQ_Load::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHQ_Load_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_CHQ_Load_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_CHS_Buffer_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_CHS_Buffer_default_instance_;
    new (ptr) ::megastructure::Message_CHS_Buffer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_CHS_Buffer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHS_Buffer_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_CHS_Buffer_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_CHS_Enroll_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_CHS_Enroll_default_instance_;
    new (ptr) ::megastructure::Message_CHS_Enroll();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_CHS_Enroll::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHS_Enroll_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_CHS_Enroll_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_CHS_EnrollEG_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_CHS_EnrollEG_default_instance_;
    new (ptr) ::megastructure::Message_CHS_EnrollEG();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_CHS_EnrollEG::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_CHS_EnrollEG_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_CHS_EnrollEG_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_default_instance_;
    new (ptr) ::megastructure::Message_Config();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Message_Config_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Message_Config_megastructure_2eproto}, {
      &scc_info_Message_Config_Load_megastructure_2eproto.base,
      &scc_info_Message_Config_Save_megastructure_2eproto.base,}};

static void InitDefaultsscc_info_Message_Config_Load_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Load_default_instance_;
    new (ptr) ::megastructure::Message_Config_Load();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Load::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_Config_Load_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Message_Config_Load_megastructure_2eproto}, {
      &scc_info_Message_Config_Load_MSQ_megastructure_2eproto.base,
      &scc_info_Message_Config_Load_SMS_megastructure_2eproto.base,
      &scc_info_Message_Config_Load_CHQ_megastructure_2eproto.base,
      &scc_info_Message_Config_Load_HCS_megastructure_2eproto.base,}};

static void InitDefaultsscc_info_Message_Config_Load_CHQ_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Load_CHQ_default_instance_;
    new (ptr) ::megastructure::Message_Config_Load_CHQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Load_CHQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_CHQ_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Load_CHQ_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Load_HCS_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Load_HCS_default_instance_;
    new (ptr) ::megastructure::Message_Config_Load_HCS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Load_HCS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_HCS_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Load_HCS_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Load_MSQ_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Load_MSQ_default_instance_;
    new (ptr) ::megastructure::Message_Config_Load_MSQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Load_MSQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_MSQ_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Load_MSQ_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Load_SMS_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Load_SMS_default_instance_;
    new (ptr) ::megastructure::Message_Config_Load_SMS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Load_SMS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Load_SMS_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Load_SMS_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Save_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Save_default_instance_;
    new (ptr) ::megastructure::Message_Config_Save();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Save::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_Config_Save_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Message_Config_Save_megastructure_2eproto}, {
      &scc_info_Message_Config_Save_MSQ_megastructure_2eproto.base,
      &scc_info_Message_Config_Save_SMS_megastructure_2eproto.base,
      &scc_info_Message_Config_Save_CHQ_megastructure_2eproto.base,
      &scc_info_Message_Config_Save_HCS_megastructure_2eproto.base,}};

static void InitDefaultsscc_info_Message_Config_Save_CHQ_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Save_CHQ_default_instance_;
    new (ptr) ::megastructure::Message_Config_Save_CHQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Save_CHQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_CHQ_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Save_CHQ_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Save_HCS_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Save_HCS_default_instance_;
    new (ptr) ::megastructure::Message_Config_Save_HCS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Save_HCS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_HCS_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Save_HCS_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Save_MSQ_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Save_MSQ_default_instance_;
    new (ptr) ::megastructure::Message_Config_Save_MSQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Save_MSQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_MSQ_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Save_MSQ_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_Config_Save_SMS_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_Config_Save_SMS_default_instance_;
    new (ptr) ::megastructure::Message_Config_Save_SMS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_Config_Save_SMS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Config_Save_SMS_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Config_Save_SMS_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_EG_Msg_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Message_EG_Msg_megastructure_2eproto}, {
      &scc_info_Message_EG_Msg_Request_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_Response_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_Error_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_Event_megastructure_2eproto.base,}};

static void InitDefaultsscc_info_Message_EG_Msg_Error_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Error_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Error();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Error::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Error_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Error_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_Event_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Event_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Event_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Event_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_Request_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Request_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Message_EG_Msg_Request_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Message_EG_Msg_Request_megastructure_2eproto}, {
      &scc_info_Message_EG_Msg_Request_Read_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_Request_Write_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto.base,
      &scc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto.base,}};

static void InitDefaultsscc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Request_Lock_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Request_Lock();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Request_Lock::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_Request_Read_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Request_Read_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Request_Read();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Request_Read::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Read_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Request_Read_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Request_Unlock_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Request_Unlock();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Request_Unlock::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_Request_Write_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Request_Write_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Request_Write();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Request_Write::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Request_Write_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Request_Write_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_EG_Msg_Response_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_EG_Msg_Response_default_instance_;
    new (ptr) ::megastructure::Message_EG_Msg_Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_EG_Msg_Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_EG_Msg_Response_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_EG_Msg_Response_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_HCQ_Buffer_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_HCQ_Buffer_default_instance_;
    new (ptr) ::megastructure::Message_HCQ_Buffer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_HCQ_Buffer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCQ_Buffer_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_HCQ_Buffer_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_HCQ_Enroll_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_HCQ_Enroll_default_instance_;
    new (ptr) ::megastructure::Message_HCQ_Enroll();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_HCQ_Enroll::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCQ_Enroll_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_HCQ_Enroll_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_HCQ_EnrollEG_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_HCQ_EnrollEG_default_instance_;
    new (ptr) ::megastructure::Message_HCQ_EnrollEG();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_HCQ_EnrollEG::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCQ_EnrollEG_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_HCQ_EnrollEG_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_HCS_Alive_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_HCS_Alive_default_instance_;
    new (ptr) ::megastructure::Message_HCS_Alive();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_HCS_Alive::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCS_Alive_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_HCS_Alive_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_HCS_Load_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_HCS_Load_default_instance_;
    new (ptr) ::megastructure::Message_HCS_Load();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_HCS_Load::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_HCS_Load_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_HCS_Load_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_MSQ_Alive_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_MSQ_Alive_default_instance_;
    new (ptr) ::megastructure::Message_MSQ_Alive();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_MSQ_Alive::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_MSQ_Alive_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_MSQ_Alive_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_MSQ_Load_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_MSQ_Load_default_instance_;
    new (ptr) ::megastructure::Message_MSQ_Load();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_MSQ_Load::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_MSQ_Load_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_MSQ_Load_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_MSS_Enroll_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_MSS_Enroll_default_instance_;
    new (ptr) ::megastructure::Message_MSS_Enroll();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_MSS_Enroll::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_MSS_Enroll_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_MSS_Enroll_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_SMQ_Enroll_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_SMQ_Enroll_default_instance_;
    new (ptr) ::megastructure::Message_SMQ_Enroll();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_SMQ_Enroll::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_SMQ_Enroll_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_SMQ_Enroll_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_SMS_Alive_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_SMS_Alive_default_instance_;
    new (ptr) ::megastructure::Message_SMS_Alive();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_SMS_Alive::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_SMS_Alive_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_SMS_Alive_megastructure_2eproto}, {}};

static void InitDefaultsscc_info_Message_SMS_Load_megastructure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::megastructure::_Message_SMS_Load_default_instance_;
    new (ptr) ::megastructure::Message_SMS_Load();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::megastructure::Message_SMS_Load::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_SMS_Load_megastructure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_SMS_Load_megastructure_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_megastructure_2eproto[37];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_megastructure_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_megastructure_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_megastructure_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_SMQ_Enroll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_SMQ_Enroll, slavename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSS_Enroll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSS_Enroll, success_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSS_Enroll, programname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSQ_Alive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSQ_Alive, slavename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_SMS_Alive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_SMS_Alive, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_Enroll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_Enroll, processname_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_Enroll, unique_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Enroll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Enroll, success_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Enroll, workspacepath_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Enroll, slavename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_EnrollEG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_EnrollEG, unique_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_EnrollEG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_EnrollEG, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHQ_Alive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHQ_Alive, processname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCS_Alive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCS_Alive, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSQ_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_MSQ_Load, programname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_SMS_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_SMS_Load, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHQ_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHQ_Load, hostname_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHQ_Load, programname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCS_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCS_Load, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_Buffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_Buffer, buffername_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_HCQ_Buffer, size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Buffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Buffer, buffername_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_CHS_Buffer, sharedname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load_MSQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load_SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load_SMS, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load_CHQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load_HCS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load_HCS, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::megastructure::Message_Config_LoadDefaultTypeInternal, msq_),
  offsetof(::megastructure::Message_Config_LoadDefaultTypeInternal, sms_),
  offsetof(::megastructure::Message_Config_LoadDefaultTypeInternal, chq_),
  offsetof(::megastructure::Message_Config_LoadDefaultTypeInternal, hcs_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Load, foobar_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save_MSQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save_SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save_SMS, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save_CHQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save_HCS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save_HCS, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::megastructure::Message_Config_SaveDefaultTypeInternal, msq_),
  offsetof(::megastructure::Message_Config_SaveDefaultTypeInternal, sms_),
  offsetof(::megastructure::Message_Config_SaveDefaultTypeInternal, chq_),
  offsetof(::megastructure::Message_Config_SaveDefaultTypeInternal, hcs_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config_Save, foobar_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::megastructure::Message_ConfigDefaultTypeInternal, load_),
  offsetof(::megastructure::Message_ConfigDefaultTypeInternal, save_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_Config, foobar_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request_Read, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request_Write, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request_Write, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request_Lock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request_Lock, read_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request_Unlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request, coordinator_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request, host_),
  offsetof(::megastructure::Message_EG_Msg_RequestDefaultTypeInternal, read_),
  offsetof(::megastructure::Message_EG_Msg_RequestDefaultTypeInternal, write_),
  offsetof(::megastructure::Message_EG_Msg_RequestDefaultTypeInternal, lock_),
  offsetof(::megastructure::Message_EG_Msg_RequestDefaultTypeInternal, unlock_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Request, foobar_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Response, coordinator_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Response, host_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Response, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Error, coordinator_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Error, host_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg_Event, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg, type_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg, instance_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg, cycle_),
  offsetof(::megastructure::Message_EG_MsgDefaultTypeInternal, request_),
  offsetof(::megastructure::Message_EG_MsgDefaultTypeInternal, response_),
  offsetof(::megastructure::Message_EG_MsgDefaultTypeInternal, error_),
  offsetof(::megastructure::Message_EG_MsgDefaultTypeInternal, event_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message_EG_Msg, foobar_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::megastructure::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::megastructure::MessageDefaultTypeInternal, smq_enroll_),
  offsetof(::megastructure::MessageDefaultTypeInternal, mss_enroll_),
  offsetof(::megastructure::MessageDefaultTypeInternal, msq_alive_),
  offsetof(::megastructure::MessageDefaultTypeInternal, sms_alive_),
  offsetof(::megastructure::MessageDefaultTypeInternal, hcq_enroll_),
  offsetof(::megastructure::MessageDefaultTypeInternal, chs_enroll_),
  offsetof(::megastructure::MessageDefaultTypeInternal, hcq_enrolleg_),
  offsetof(::megastructure::MessageDefaultTypeInternal, chs_enrolleg_),
  offsetof(::megastructure::MessageDefaultTypeInternal, chq_alive_),
  offsetof(::megastructure::MessageDefaultTypeInternal, hcs_alive_),
  offsetof(::megastructure::MessageDefaultTypeInternal, msq_load_),
  offsetof(::megastructure::MessageDefaultTypeInternal, sms_load_),
  offsetof(::megastructure::MessageDefaultTypeInternal, chq_load_),
  offsetof(::megastructure::MessageDefaultTypeInternal, hcs_load_),
  offsetof(::megastructure::MessageDefaultTypeInternal, hcq_buffer_),
  offsetof(::megastructure::MessageDefaultTypeInternal, chs_buffer_),
  offsetof(::megastructure::MessageDefaultTypeInternal, config_msg_),
  offsetof(::megastructure::MessageDefaultTypeInternal, eg_msg_),
  PROTOBUF_FIELD_OFFSET(::megastructure::Message, foobar_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::megastructure::Message_SMQ_Enroll)},
  { 6, -1, sizeof(::megastructure::Message_MSS_Enroll)},
  { 13, -1, sizeof(::megastructure::Message_MSQ_Alive)},
  { 19, -1, sizeof(::megastructure::Message_SMS_Alive)},
  { 25, -1, sizeof(::megastructure::Message_HCQ_Enroll)},
  { 32, -1, sizeof(::megastructure::Message_CHS_Enroll)},
  { 40, -1, sizeof(::megastructure::Message_HCQ_EnrollEG)},
  { 46, -1, sizeof(::megastructure::Message_CHS_EnrollEG)},
  { 52, -1, sizeof(::megastructure::Message_CHQ_Alive)},
  { 58, -1, sizeof(::megastructure::Message_HCS_Alive)},
  { 64, -1, sizeof(::megastructure::Message_MSQ_Load)},
  { 70, -1, sizeof(::megastructure::Message_SMS_Load)},
  { 76, -1, sizeof(::megastructure::Message_CHQ_Load)},
  { 83, -1, sizeof(::megastructure::Message_HCS_Load)},
  { 89, -1, sizeof(::megastructure::Message_HCQ_Buffer)},
  { 96, -1, sizeof(::megastructure::Message_CHS_Buffer)},
  { 103, -1, sizeof(::megastructure::Message_Config_Load_MSQ)},
  { 108, -1, sizeof(::megastructure::Message_Config_Load_SMS)},
  { 114, -1, sizeof(::megastructure::Message_Config_Load_CHQ)},
  { 119, -1, sizeof(::megastructure::Message_Config_Load_HCS)},
  { 125, -1, sizeof(::megastructure::Message_Config_Load)},
  { 135, -1, sizeof(::megastructure::Message_Config_Save_MSQ)},
  { 140, -1, sizeof(::megastructure::Message_Config_Save_SMS)},
  { 146, -1, sizeof(::megastructure::Message_Config_Save_CHQ)},
  { 151, -1, sizeof(::megastructure::Message_Config_Save_HCS)},
  { 157, -1, sizeof(::megastructure::Message_Config_Save)},
  { 167, -1, sizeof(::megastructure::Message_Config)},
  { 175, -1, sizeof(::megastructure::Message_EG_Msg_Request_Read)},
  { 180, -1, sizeof(::megastructure::Message_EG_Msg_Request_Write)},
  { 186, -1, sizeof(::megastructure::Message_EG_Msg_Request_Lock)},
  { 192, -1, sizeof(::megastructure::Message_EG_Msg_Request_Unlock)},
  { 197, -1, sizeof(::megastructure::Message_EG_Msg_Request)},
  { 209, -1, sizeof(::megastructure::Message_EG_Msg_Response)},
  { 217, -1, sizeof(::megastructure::Message_EG_Msg_Error)},
  { 224, -1, sizeof(::megastructure::Message_EG_Msg_Event)},
  { 230, -1, sizeof(::megastructure::Message_EG_Msg)},
  { 243, -1, sizeof(::megastructure::Message)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_SMQ_Enroll_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_MSS_Enroll_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_MSQ_Alive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_SMS_Alive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_HCQ_Enroll_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_CHS_Enroll_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_HCQ_EnrollEG_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_CHS_EnrollEG_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_CHQ_Alive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_HCS_Alive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_MSQ_Load_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_SMS_Load_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_CHQ_Load_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_HCS_Load_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_HCQ_Buffer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_CHS_Buffer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Load_MSQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Load_SMS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Load_CHQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Load_HCS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Load_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Save_MSQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Save_SMS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Save_CHQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Save_HCS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_Save_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_Config_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Request_Read_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Request_Write_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Request_Lock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Request_Unlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Error_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_Event_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_EG_Msg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::megastructure::_Message_default_instance_),
};

const char descriptor_table_protodef_megastructure_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023megastructure.proto\022\rmegastructure\"\353\030\n"
  "\007Message\0227\n\nsmq_enroll\030\002 \001(\0132!.megastruc"
  "ture.Message.SMQ_EnrollH\000\0227\n\nmss_enroll\030"
  "\003 \001(\0132!.megastructure.Message.MSS_Enroll"
  "H\000\0225\n\tmsq_alive\030\004 \001(\0132 .megastructure.Me"
  "ssage.MSQ_AliveH\000\0225\n\tsms_alive\030\005 \001(\0132 .m"
  "egastructure.Message.SMS_AliveH\000\0227\n\nhcq_"
  "enroll\030\006 \001(\0132!.megastructure.Message.HCQ"
  "_EnrollH\000\0227\n\nchs_enroll\030\007 \001(\0132!.megastru"
  "cture.Message.CHS_EnrollH\000\022;\n\014hcq_enroll"
  "eg\030\010 \001(\0132#.megastructure.Message.HCQ_Enr"
  "ollEGH\000\022;\n\014chs_enrolleg\030\t \001(\0132#.megastru"
  "cture.Message.CHS_EnrollEGH\000\0225\n\tchq_aliv"
  "e\030\n \001(\0132 .megastructure.Message.CHQ_Aliv"
  "eH\000\0225\n\thcs_alive\030\013 \001(\0132 .megastructure.M"
  "essage.HCS_AliveH\000\0223\n\010msq_load\030\014 \001(\0132\037.m"
  "egastructure.Message.MSQ_LoadH\000\0223\n\010sms_l"
  "oad\030\r \001(\0132\037.megastructure.Message.SMS_Lo"
  "adH\000\0223\n\010chq_load\030\016 \001(\0132\037.megastructure.M"
  "essage.CHQ_LoadH\000\0223\n\010hcs_load\030\017 \001(\0132\037.me"
  "gastructure.Message.HCS_LoadH\000\0227\n\nhcq_bu"
  "ffer\030\020 \001(\0132!.megastructure.Message.HCQ_B"
  "ufferH\000\0227\n\nchs_buffer\030\021 \001(\0132!.megastruct"
  "ure.Message.CHS_BufferH\000\0223\n\nconfig_msg\030\022"
  " \001(\0132\035.megastructure.Message.ConfigH\000\022/\n"
  "\006eg_msg\030\023 \001(\0132\035.megastructure.Message.EG"
  "_MsgH\000\032\037\n\nSMQ_Enroll\022\021\n\tslavename\030\001 \001(\t\032"
  "2\n\nMSS_Enroll\022\017\n\007success\030\001 \001(\010\022\023\n\013progra"
  "mname\030\002 \001(\t\032\036\n\tMSQ_Alive\022\021\n\tslavename\030\001 "
  "\001(\t\032\034\n\tSMS_Alive\022\017\n\007success\030\001 \001(\010\0321\n\nHCQ"
  "_Enroll\022\023\n\013processname\030\001 \001(\t\022\016\n\006unique\030\002"
  " \001(\t\032G\n\nCHS_Enroll\022\017\n\007success\030\001 \001(\010\022\025\n\rw"
  "orkspacepath\030\002 \001(\t\022\021\n\tslavename\030\003 \001(\t\032\036\n"
  "\014HCQ_EnrollEG\022\016\n\006unique\030\001 \001(\t\032\037\n\014CHS_Enr"
  "ollEG\022\017\n\007success\030\001 \001(\010\032 \n\tCHQ_Alive\022\023\n\013p"
  "rocessname\030\001 \001(\t\032\034\n\tHCS_Alive\022\017\n\007success"
  "\030\001 \001(\010\032\037\n\010MSQ_Load\022\023\n\013programname\030\001 \001(\t\032"
  "\033\n\010SMS_Load\022\017\n\007success\030\001 \001(\010\0321\n\010CHQ_Load"
  "\022\020\n\010hostname\030\001 \001(\t\022\023\n\013programname\030\002 \001(\t\032"
  "\033\n\010HCS_Load\022\017\n\007success\030\001 \001(\010\032.\n\nHCQ_Buff"
  "er\022\022\n\nbuffername\030\001 \001(\t\022\014\n\004size\030\002 \001(\r\0324\n\n"
  "CHS_Buffer\022\022\n\nbuffername\030\001 \001(\t\022\022\n\nshared"
  "name\030\002 \001(\t\032\324\005\n\006Config\0222\n\004load\030\001 \001(\0132\".me"
  "gastructure.Message.Config.LoadH\000\0222\n\004sav"
  "e\030\002 \001(\0132\".megastructure.Message.Config.S"
  "aveH\000\032\252\002\n\004Load\0225\n\003msq\030\001 \001(\0132&.megastruct"
  "ure.Message.Config.Load.MSQH\000\0225\n\003sms\030\002 \001"
  "(\0132&.megastructure.Message.Config.Load.S"
  "MSH\000\0225\n\003chq\030\003 \001(\0132&.megastructure.Messag"
  "e.Config.Load.CHQH\000\0225\n\003hcs\030\004 \001(\0132&.megas"
  "tructure.Message.Config.Load.HCSH\000\032\005\n\003MS"
  "Q\032\026\n\003SMS\022\017\n\007success\030\001 \001(\010\032\005\n\003CHQ\032\026\n\003HCS\022"
  "\017\n\007success\030\001 \001(\010B\010\n\006foobar\032\252\002\n\004Save\0225\n\003m"
  "sq\030\001 \001(\0132&.megastructure.Message.Config."
  "Save.MSQH\000\0225\n\003sms\030\002 \001(\0132&.megastructure."
  "Message.Config.Save.SMSH\000\0225\n\003chq\030\003 \001(\0132&"
  ".megastructure.Message.Config.Save.CHQH\000"
  "\0225\n\003hcs\030\004 \001(\0132&.megastructure.Message.Co"
  "nfig.Save.HCSH\000\032\005\n\003MSQ\032\026\n\003SMS\022\017\n\007success"
  "\030\001 \001(\010\032\005\n\003CHQ\032\026\n\003HCS\022\017\n\007success\030\001 \001(\010B\010\n"
  "\006foobarB\010\n\006foobar\032\224\006\n\006EG_Msg\022\014\n\004type\030\001 \001"
  "(\005\022\020\n\010instance\030\002 \001(\r\022\r\n\005cycle\030\003 \001(\r\0228\n\007r"
  "equest\030\004 \001(\0132%.megastructure.Message.EG_"
  "Msg.RequestH\000\022:\n\010response\030\005 \001(\0132&.megast"
  "ructure.Message.EG_Msg.ResponseH\000\0224\n\005err"
  "or\030\006 \001(\0132#.megastructure.Message.EG_Msg."
  "ErrorH\000\0224\n\005event\030\007 \001(\0132#.megastructure.M"
  "essage.EG_Msg.EventH\000\032\354\002\n\007Request\022\023\n\013coo"
  "rdinator\030\001 \001(\r\022\014\n\004host\030\002 \001(\r\022:\n\004read\030\003 \001"
  "(\0132*.megastructure.Message.EG_Msg.Reques"
  "t.ReadH\000\022<\n\005write\030\004 \001(\0132+.megastructure."
  "Message.EG_Msg.Request.WriteH\000\022:\n\004lock\030\006"
  " \001(\0132*.megastructure.Message.EG_Msg.Requ"
  "est.LockH\000\022>\n\006unlock\030\007 \001(\0132,.megastructu"
  "re.Message.EG_Msg.Request.UnlockH\000\032\006\n\004Re"
  "ad\032\026\n\005Write\022\r\n\005value\030\001 \001(\014\032\024\n\004Lock\022\014\n\004re"
  "ad\030\001 \001(\010\032\010\n\006UnlockB\010\n\006foobar\032<\n\010Response"
  "\022\023\n\013coordinator\030\001 \001(\r\022\014\n\004host\030\002 \001(\r\022\r\n\005v"
  "alue\030\003 \001(\014\032*\n\005Error\022\023\n\013coordinator\030\001 \001(\r"
  "\022\014\n\004host\030\002 \001(\r\032\026\n\005Event\022\r\n\005value\030\001 \001(\014B\010"
  "\n\006foobarB\010\n\006foobarb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_megastructure_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_megastructure_2eproto_sccs[37] = {
  &scc_info_Message_megastructure_2eproto.base,
  &scc_info_Message_CHQ_Alive_megastructure_2eproto.base,
  &scc_info_Message_CHQ_Load_megastructure_2eproto.base,
  &scc_info_Message_CHS_Buffer_megastructure_2eproto.base,
  &scc_info_Message_CHS_Enroll_megastructure_2eproto.base,
  &scc_info_Message_CHS_EnrollEG_megastructure_2eproto.base,
  &scc_info_Message_Config_megastructure_2eproto.base,
  &scc_info_Message_Config_Load_megastructure_2eproto.base,
  &scc_info_Message_Config_Load_CHQ_megastructure_2eproto.base,
  &scc_info_Message_Config_Load_HCS_megastructure_2eproto.base,
  &scc_info_Message_Config_Load_MSQ_megastructure_2eproto.base,
  &scc_info_Message_Config_Load_SMS_megastructure_2eproto.base,
  &scc_info_Message_Config_Save_megastructure_2eproto.base,
  &scc_info_Message_Config_Save_CHQ_megastructure_2eproto.base,
  &scc_info_Message_Config_Save_HCS_megastructure_2eproto.base,
  &scc_info_Message_Config_Save_MSQ_megastructure_2eproto.base,
  &scc_info_Message_Config_Save_SMS_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Error_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Event_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Request_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Request_Read_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Request_Write_megastructure_2eproto.base,
  &scc_info_Message_EG_Msg_Response_megastructure_2eproto.base,
  &scc_info_Message_HCQ_Buffer_megastructure_2eproto.base,
  &scc_info_Message_HCQ_Enroll_megastructure_2eproto.base,
  &scc_info_Message_HCQ_EnrollEG_megastructure_2eproto.base,
  &scc_info_Message_HCS_Alive_megastructure_2eproto.base,
  &scc_info_Message_HCS_Load_megastructure_2eproto.base,
  &scc_info_Message_MSQ_Alive_megastructure_2eproto.base,
  &scc_info_Message_MSQ_Load_megastructure_2eproto.base,
  &scc_info_Message_MSS_Enroll_megastructure_2eproto.base,
  &scc_info_Message_SMQ_Enroll_megastructure_2eproto.base,
  &scc_info_Message_SMS_Alive_megastructure_2eproto.base,
  &scc_info_Message_SMS_Load_megastructure_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_megastructure_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_megastructure_2eproto = {
  false, false, descriptor_table_protodef_megastructure_2eproto, "megastructure.proto", 3226,
  &descriptor_table_megastructure_2eproto_once, descriptor_table_megastructure_2eproto_sccs, descriptor_table_megastructure_2eproto_deps, 37, 0,
  schemas, file_default_instances, TableStruct_megastructure_2eproto::offsets,
  file_level_metadata_megastructure_2eproto, 37, file_level_enum_descriptors_megastructure_2eproto, file_level_service_descriptors_megastructure_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_megastructure_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_megastructure_2eproto)), true);
namespace megastructure {

// ===================================================================

void Message_SMQ_Enroll::InitAsDefaultInstance() {
}
class Message_SMQ_Enroll::_Internal {
 public:
};

Message_SMQ_Enroll::Message_SMQ_Enroll(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.SMQ_Enroll)
}
Message_SMQ_Enroll::Message_SMQ_Enroll(const Message_SMQ_Enroll& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  slavename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_slavename().empty()) {
    slavename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_slavename(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.SMQ_Enroll)
}

void Message_SMQ_Enroll::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_SMQ_Enroll_megastructure_2eproto.base);
  slavename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_SMQ_Enroll::~Message_SMQ_Enroll() {
  // @@protoc_insertion_point(destructor:megastructure.Message.SMQ_Enroll)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_SMQ_Enroll::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  slavename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_SMQ_Enroll::ArenaDtor(void* object) {
  Message_SMQ_Enroll* _this = reinterpret_cast< Message_SMQ_Enroll* >(object);
  (void)_this;
}
void Message_SMQ_Enroll::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_SMQ_Enroll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_SMQ_Enroll& Message_SMQ_Enroll::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_SMQ_Enroll_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_SMQ_Enroll::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.SMQ_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slavename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_SMQ_Enroll::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string slavename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_slavename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.SMQ_Enroll.slavename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_SMQ_Enroll::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.SMQ_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string slavename = 1;
  if (this->slavename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_slavename().data(), static_cast<int>(this->_internal_slavename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.SMQ_Enroll.slavename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_slavename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.SMQ_Enroll)
  return target;
}

size_t Message_SMQ_Enroll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.SMQ_Enroll)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string slavename = 1;
  if (this->slavename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_slavename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_SMQ_Enroll::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.SMQ_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_SMQ_Enroll* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_SMQ_Enroll>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.SMQ_Enroll)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.SMQ_Enroll)
    MergeFrom(*source);
  }
}

void Message_SMQ_Enroll::MergeFrom(const Message_SMQ_Enroll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.SMQ_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slavename().size() > 0) {
    _internal_set_slavename(from._internal_slavename());
  }
}

void Message_SMQ_Enroll::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.SMQ_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_SMQ_Enroll::CopyFrom(const Message_SMQ_Enroll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.SMQ_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_SMQ_Enroll::IsInitialized() const {
  return true;
}

void Message_SMQ_Enroll::InternalSwap(Message_SMQ_Enroll* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  slavename_.Swap(&other->slavename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_SMQ_Enroll::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_MSS_Enroll::InitAsDefaultInstance() {
}
class Message_MSS_Enroll::_Internal {
 public:
};

Message_MSS_Enroll::Message_MSS_Enroll(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.MSS_Enroll)
}
Message_MSS_Enroll::Message_MSS_Enroll(const Message_MSS_Enroll& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_programname().empty()) {
    programname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_programname(),
      GetArena());
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.MSS_Enroll)
}

void Message_MSS_Enroll::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_MSS_Enroll_megastructure_2eproto.base);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

Message_MSS_Enroll::~Message_MSS_Enroll() {
  // @@protoc_insertion_point(destructor:megastructure.Message.MSS_Enroll)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_MSS_Enroll::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  programname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_MSS_Enroll::ArenaDtor(void* object) {
  Message_MSS_Enroll* _this = reinterpret_cast< Message_MSS_Enroll* >(object);
  (void)_this;
}
void Message_MSS_Enroll::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_MSS_Enroll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_MSS_Enroll& Message_MSS_Enroll::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_MSS_Enroll_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_MSS_Enroll::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.MSS_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  programname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_MSS_Enroll::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string programname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_programname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.MSS_Enroll.programname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_MSS_Enroll::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.MSS_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string programname = 2;
  if (this->programname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_programname().data(), static_cast<int>(this->_internal_programname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.MSS_Enroll.programname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_programname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.MSS_Enroll)
  return target;
}

size_t Message_MSS_Enroll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.MSS_Enroll)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string programname = 2;
  if (this->programname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_programname());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MSS_Enroll::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.MSS_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MSS_Enroll* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_MSS_Enroll>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.MSS_Enroll)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.MSS_Enroll)
    MergeFrom(*source);
  }
}

void Message_MSS_Enroll::MergeFrom(const Message_MSS_Enroll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.MSS_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.programname().size() > 0) {
    _internal_set_programname(from._internal_programname());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_MSS_Enroll::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.MSS_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MSS_Enroll::CopyFrom(const Message_MSS_Enroll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.MSS_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MSS_Enroll::IsInitialized() const {
  return true;
}

void Message_MSS_Enroll::InternalSwap(Message_MSS_Enroll* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  programname_.Swap(&other->programname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_MSS_Enroll::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_MSQ_Alive::InitAsDefaultInstance() {
}
class Message_MSQ_Alive::_Internal {
 public:
};

Message_MSQ_Alive::Message_MSQ_Alive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.MSQ_Alive)
}
Message_MSQ_Alive::Message_MSQ_Alive(const Message_MSQ_Alive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  slavename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_slavename().empty()) {
    slavename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_slavename(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.MSQ_Alive)
}

void Message_MSQ_Alive::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_MSQ_Alive_megastructure_2eproto.base);
  slavename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_MSQ_Alive::~Message_MSQ_Alive() {
  // @@protoc_insertion_point(destructor:megastructure.Message.MSQ_Alive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_MSQ_Alive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  slavename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_MSQ_Alive::ArenaDtor(void* object) {
  Message_MSQ_Alive* _this = reinterpret_cast< Message_MSQ_Alive* >(object);
  (void)_this;
}
void Message_MSQ_Alive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_MSQ_Alive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_MSQ_Alive& Message_MSQ_Alive::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_MSQ_Alive_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_MSQ_Alive::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.MSQ_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slavename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_MSQ_Alive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string slavename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_slavename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.MSQ_Alive.slavename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_MSQ_Alive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.MSQ_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string slavename = 1;
  if (this->slavename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_slavename().data(), static_cast<int>(this->_internal_slavename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.MSQ_Alive.slavename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_slavename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.MSQ_Alive)
  return target;
}

size_t Message_MSQ_Alive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.MSQ_Alive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string slavename = 1;
  if (this->slavename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_slavename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MSQ_Alive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.MSQ_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MSQ_Alive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_MSQ_Alive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.MSQ_Alive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.MSQ_Alive)
    MergeFrom(*source);
  }
}

void Message_MSQ_Alive::MergeFrom(const Message_MSQ_Alive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.MSQ_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slavename().size() > 0) {
    _internal_set_slavename(from._internal_slavename());
  }
}

void Message_MSQ_Alive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.MSQ_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MSQ_Alive::CopyFrom(const Message_MSQ_Alive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.MSQ_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MSQ_Alive::IsInitialized() const {
  return true;
}

void Message_MSQ_Alive::InternalSwap(Message_MSQ_Alive* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  slavename_.Swap(&other->slavename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_MSQ_Alive::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_SMS_Alive::InitAsDefaultInstance() {
}
class Message_SMS_Alive::_Internal {
 public:
};

Message_SMS_Alive::Message_SMS_Alive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.SMS_Alive)
}
Message_SMS_Alive::Message_SMS_Alive(const Message_SMS_Alive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.SMS_Alive)
}

void Message_SMS_Alive::SharedCtor() {
  success_ = false;
}

Message_SMS_Alive::~Message_SMS_Alive() {
  // @@protoc_insertion_point(destructor:megastructure.Message.SMS_Alive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_SMS_Alive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_SMS_Alive::ArenaDtor(void* object) {
  Message_SMS_Alive* _this = reinterpret_cast< Message_SMS_Alive* >(object);
  (void)_this;
}
void Message_SMS_Alive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_SMS_Alive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_SMS_Alive& Message_SMS_Alive::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_SMS_Alive_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_SMS_Alive::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.SMS_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_SMS_Alive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_SMS_Alive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.SMS_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.SMS_Alive)
  return target;
}

size_t Message_SMS_Alive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.SMS_Alive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_SMS_Alive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.SMS_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_SMS_Alive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_SMS_Alive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.SMS_Alive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.SMS_Alive)
    MergeFrom(*source);
  }
}

void Message_SMS_Alive::MergeFrom(const Message_SMS_Alive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.SMS_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_SMS_Alive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.SMS_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_SMS_Alive::CopyFrom(const Message_SMS_Alive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.SMS_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_SMS_Alive::IsInitialized() const {
  return true;
}

void Message_SMS_Alive::InternalSwap(Message_SMS_Alive* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_SMS_Alive::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_HCQ_Enroll::InitAsDefaultInstance() {
}
class Message_HCQ_Enroll::_Internal {
 public:
};

Message_HCQ_Enroll::Message_HCQ_Enroll(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.HCQ_Enroll)
}
Message_HCQ_Enroll::Message_HCQ_Enroll(const Message_HCQ_Enroll& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  processname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_processname().empty()) {
    processname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_processname(),
      GetArena());
  }
  unique_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unique().empty()) {
    unique_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unique(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.HCQ_Enroll)
}

void Message_HCQ_Enroll::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_HCQ_Enroll_megastructure_2eproto.base);
  processname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_HCQ_Enroll::~Message_HCQ_Enroll() {
  // @@protoc_insertion_point(destructor:megastructure.Message.HCQ_Enroll)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_HCQ_Enroll::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  processname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_HCQ_Enroll::ArenaDtor(void* object) {
  Message_HCQ_Enroll* _this = reinterpret_cast< Message_HCQ_Enroll* >(object);
  (void)_this;
}
void Message_HCQ_Enroll::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_HCQ_Enroll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_HCQ_Enroll& Message_HCQ_Enroll::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_HCQ_Enroll_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_HCQ_Enroll::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.HCQ_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unique_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_HCQ_Enroll::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string processname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_processname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.HCQ_Enroll.processname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string unique = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_unique();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.HCQ_Enroll.unique"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_HCQ_Enroll::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.HCQ_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string processname = 1;
  if (this->processname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_processname().data(), static_cast<int>(this->_internal_processname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.HCQ_Enroll.processname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_processname(), target);
  }

  // string unique = 2;
  if (this->unique().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique().data(), static_cast<int>(this->_internal_unique().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.HCQ_Enroll.unique");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_unique(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.HCQ_Enroll)
  return target;
}

size_t Message_HCQ_Enroll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.HCQ_Enroll)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string processname = 1;
  if (this->processname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_processname());
  }

  // string unique = 2;
  if (this->unique().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_HCQ_Enroll::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.HCQ_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_HCQ_Enroll* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_HCQ_Enroll>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.HCQ_Enroll)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.HCQ_Enroll)
    MergeFrom(*source);
  }
}

void Message_HCQ_Enroll::MergeFrom(const Message_HCQ_Enroll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.HCQ_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.processname().size() > 0) {
    _internal_set_processname(from._internal_processname());
  }
  if (from.unique().size() > 0) {
    _internal_set_unique(from._internal_unique());
  }
}

void Message_HCQ_Enroll::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.HCQ_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_HCQ_Enroll::CopyFrom(const Message_HCQ_Enroll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.HCQ_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_HCQ_Enroll::IsInitialized() const {
  return true;
}

void Message_HCQ_Enroll::InternalSwap(Message_HCQ_Enroll* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  processname_.Swap(&other->processname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unique_.Swap(&other->unique_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_HCQ_Enroll::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_CHS_Enroll::InitAsDefaultInstance() {
}
class Message_CHS_Enroll::_Internal {
 public:
};

Message_CHS_Enroll::Message_CHS_Enroll(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.CHS_Enroll)
}
Message_CHS_Enroll::Message_CHS_Enroll(const Message_CHS_Enroll& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  workspacepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workspacepath().empty()) {
    workspacepath_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_workspacepath(),
      GetArena());
  }
  slavename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_slavename().empty()) {
    slavename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_slavename(),
      GetArena());
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.CHS_Enroll)
}

void Message_CHS_Enroll::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_CHS_Enroll_megastructure_2eproto.base);
  workspacepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  slavename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

Message_CHS_Enroll::~Message_CHS_Enroll() {
  // @@protoc_insertion_point(destructor:megastructure.Message.CHS_Enroll)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_CHS_Enroll::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  workspacepath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  slavename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_CHS_Enroll::ArenaDtor(void* object) {
  Message_CHS_Enroll* _this = reinterpret_cast< Message_CHS_Enroll* >(object);
  (void)_this;
}
void Message_CHS_Enroll::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_CHS_Enroll::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_CHS_Enroll& Message_CHS_Enroll::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_CHS_Enroll_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_CHS_Enroll::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.CHS_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workspacepath_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  slavename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_CHS_Enroll::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workspacepath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workspacepath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHS_Enroll.workspacepath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string slavename = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_slavename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHS_Enroll.slavename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_CHS_Enroll::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.CHS_Enroll)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string workspacepath = 2;
  if (this->workspacepath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workspacepath().data(), static_cast<int>(this->_internal_workspacepath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHS_Enroll.workspacepath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workspacepath(), target);
  }

  // string slavename = 3;
  if (this->slavename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_slavename().data(), static_cast<int>(this->_internal_slavename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHS_Enroll.slavename");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_slavename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.CHS_Enroll)
  return target;
}

size_t Message_CHS_Enroll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.CHS_Enroll)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string workspacepath = 2;
  if (this->workspacepath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workspacepath());
  }

  // string slavename = 3;
  if (this->slavename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_slavename());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_CHS_Enroll::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.CHS_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_CHS_Enroll* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_CHS_Enroll>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.CHS_Enroll)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.CHS_Enroll)
    MergeFrom(*source);
  }
}

void Message_CHS_Enroll::MergeFrom(const Message_CHS_Enroll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.CHS_Enroll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.workspacepath().size() > 0) {
    _internal_set_workspacepath(from._internal_workspacepath());
  }
  if (from.slavename().size() > 0) {
    _internal_set_slavename(from._internal_slavename());
  }
  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_CHS_Enroll::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.CHS_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_CHS_Enroll::CopyFrom(const Message_CHS_Enroll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.CHS_Enroll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_CHS_Enroll::IsInitialized() const {
  return true;
}

void Message_CHS_Enroll::InternalSwap(Message_CHS_Enroll* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  workspacepath_.Swap(&other->workspacepath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  slavename_.Swap(&other->slavename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_CHS_Enroll::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_HCQ_EnrollEG::InitAsDefaultInstance() {
}
class Message_HCQ_EnrollEG::_Internal {
 public:
};

Message_HCQ_EnrollEG::Message_HCQ_EnrollEG(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.HCQ_EnrollEG)
}
Message_HCQ_EnrollEG::Message_HCQ_EnrollEG(const Message_HCQ_EnrollEG& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unique_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unique().empty()) {
    unique_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unique(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.HCQ_EnrollEG)
}

void Message_HCQ_EnrollEG::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_HCQ_EnrollEG_megastructure_2eproto.base);
  unique_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_HCQ_EnrollEG::~Message_HCQ_EnrollEG() {
  // @@protoc_insertion_point(destructor:megastructure.Message.HCQ_EnrollEG)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_HCQ_EnrollEG::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  unique_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_HCQ_EnrollEG::ArenaDtor(void* object) {
  Message_HCQ_EnrollEG* _this = reinterpret_cast< Message_HCQ_EnrollEG* >(object);
  (void)_this;
}
void Message_HCQ_EnrollEG::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_HCQ_EnrollEG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_HCQ_EnrollEG& Message_HCQ_EnrollEG::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_HCQ_EnrollEG_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_HCQ_EnrollEG::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.HCQ_EnrollEG)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unique_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_HCQ_EnrollEG::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string unique = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_unique();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.HCQ_EnrollEG.unique"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_HCQ_EnrollEG::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.HCQ_EnrollEG)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string unique = 1;
  if (this->unique().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique().data(), static_cast<int>(this->_internal_unique().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.HCQ_EnrollEG.unique");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_unique(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.HCQ_EnrollEG)
  return target;
}

size_t Message_HCQ_EnrollEG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.HCQ_EnrollEG)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unique = 1;
  if (this->unique().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_HCQ_EnrollEG::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.HCQ_EnrollEG)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_HCQ_EnrollEG* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_HCQ_EnrollEG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.HCQ_EnrollEG)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.HCQ_EnrollEG)
    MergeFrom(*source);
  }
}

void Message_HCQ_EnrollEG::MergeFrom(const Message_HCQ_EnrollEG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.HCQ_EnrollEG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.unique().size() > 0) {
    _internal_set_unique(from._internal_unique());
  }
}

void Message_HCQ_EnrollEG::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.HCQ_EnrollEG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_HCQ_EnrollEG::CopyFrom(const Message_HCQ_EnrollEG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.HCQ_EnrollEG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_HCQ_EnrollEG::IsInitialized() const {
  return true;
}

void Message_HCQ_EnrollEG::InternalSwap(Message_HCQ_EnrollEG* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  unique_.Swap(&other->unique_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_HCQ_EnrollEG::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_CHS_EnrollEG::InitAsDefaultInstance() {
}
class Message_CHS_EnrollEG::_Internal {
 public:
};

Message_CHS_EnrollEG::Message_CHS_EnrollEG(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.CHS_EnrollEG)
}
Message_CHS_EnrollEG::Message_CHS_EnrollEG(const Message_CHS_EnrollEG& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.CHS_EnrollEG)
}

void Message_CHS_EnrollEG::SharedCtor() {
  success_ = false;
}

Message_CHS_EnrollEG::~Message_CHS_EnrollEG() {
  // @@protoc_insertion_point(destructor:megastructure.Message.CHS_EnrollEG)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_CHS_EnrollEG::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_CHS_EnrollEG::ArenaDtor(void* object) {
  Message_CHS_EnrollEG* _this = reinterpret_cast< Message_CHS_EnrollEG* >(object);
  (void)_this;
}
void Message_CHS_EnrollEG::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_CHS_EnrollEG::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_CHS_EnrollEG& Message_CHS_EnrollEG::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_CHS_EnrollEG_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_CHS_EnrollEG::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.CHS_EnrollEG)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_CHS_EnrollEG::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_CHS_EnrollEG::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.CHS_EnrollEG)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.CHS_EnrollEG)
  return target;
}

size_t Message_CHS_EnrollEG::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.CHS_EnrollEG)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_CHS_EnrollEG::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.CHS_EnrollEG)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_CHS_EnrollEG* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_CHS_EnrollEG>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.CHS_EnrollEG)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.CHS_EnrollEG)
    MergeFrom(*source);
  }
}

void Message_CHS_EnrollEG::MergeFrom(const Message_CHS_EnrollEG& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.CHS_EnrollEG)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_CHS_EnrollEG::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.CHS_EnrollEG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_CHS_EnrollEG::CopyFrom(const Message_CHS_EnrollEG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.CHS_EnrollEG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_CHS_EnrollEG::IsInitialized() const {
  return true;
}

void Message_CHS_EnrollEG::InternalSwap(Message_CHS_EnrollEG* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_CHS_EnrollEG::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_CHQ_Alive::InitAsDefaultInstance() {
}
class Message_CHQ_Alive::_Internal {
 public:
};

Message_CHQ_Alive::Message_CHQ_Alive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.CHQ_Alive)
}
Message_CHQ_Alive::Message_CHQ_Alive(const Message_CHQ_Alive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  processname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_processname().empty()) {
    processname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_processname(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.CHQ_Alive)
}

void Message_CHQ_Alive::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_CHQ_Alive_megastructure_2eproto.base);
  processname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_CHQ_Alive::~Message_CHQ_Alive() {
  // @@protoc_insertion_point(destructor:megastructure.Message.CHQ_Alive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_CHQ_Alive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  processname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_CHQ_Alive::ArenaDtor(void* object) {
  Message_CHQ_Alive* _this = reinterpret_cast< Message_CHQ_Alive* >(object);
  (void)_this;
}
void Message_CHQ_Alive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_CHQ_Alive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_CHQ_Alive& Message_CHQ_Alive::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_CHQ_Alive_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_CHQ_Alive::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.CHQ_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  processname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_CHQ_Alive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string processname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_processname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHQ_Alive.processname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_CHQ_Alive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.CHQ_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string processname = 1;
  if (this->processname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_processname().data(), static_cast<int>(this->_internal_processname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHQ_Alive.processname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_processname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.CHQ_Alive)
  return target;
}

size_t Message_CHQ_Alive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.CHQ_Alive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string processname = 1;
  if (this->processname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_processname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_CHQ_Alive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.CHQ_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_CHQ_Alive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_CHQ_Alive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.CHQ_Alive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.CHQ_Alive)
    MergeFrom(*source);
  }
}

void Message_CHQ_Alive::MergeFrom(const Message_CHQ_Alive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.CHQ_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.processname().size() > 0) {
    _internal_set_processname(from._internal_processname());
  }
}

void Message_CHQ_Alive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.CHQ_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_CHQ_Alive::CopyFrom(const Message_CHQ_Alive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.CHQ_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_CHQ_Alive::IsInitialized() const {
  return true;
}

void Message_CHQ_Alive::InternalSwap(Message_CHQ_Alive* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  processname_.Swap(&other->processname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_CHQ_Alive::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_HCS_Alive::InitAsDefaultInstance() {
}
class Message_HCS_Alive::_Internal {
 public:
};

Message_HCS_Alive::Message_HCS_Alive(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.HCS_Alive)
}
Message_HCS_Alive::Message_HCS_Alive(const Message_HCS_Alive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.HCS_Alive)
}

void Message_HCS_Alive::SharedCtor() {
  success_ = false;
}

Message_HCS_Alive::~Message_HCS_Alive() {
  // @@protoc_insertion_point(destructor:megastructure.Message.HCS_Alive)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_HCS_Alive::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_HCS_Alive::ArenaDtor(void* object) {
  Message_HCS_Alive* _this = reinterpret_cast< Message_HCS_Alive* >(object);
  (void)_this;
}
void Message_HCS_Alive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_HCS_Alive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_HCS_Alive& Message_HCS_Alive::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_HCS_Alive_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_HCS_Alive::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.HCS_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_HCS_Alive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_HCS_Alive::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.HCS_Alive)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.HCS_Alive)
  return target;
}

size_t Message_HCS_Alive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.HCS_Alive)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_HCS_Alive::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.HCS_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_HCS_Alive* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_HCS_Alive>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.HCS_Alive)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.HCS_Alive)
    MergeFrom(*source);
  }
}

void Message_HCS_Alive::MergeFrom(const Message_HCS_Alive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.HCS_Alive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_HCS_Alive::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.HCS_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_HCS_Alive::CopyFrom(const Message_HCS_Alive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.HCS_Alive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_HCS_Alive::IsInitialized() const {
  return true;
}

void Message_HCS_Alive::InternalSwap(Message_HCS_Alive* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_HCS_Alive::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_MSQ_Load::InitAsDefaultInstance() {
}
class Message_MSQ_Load::_Internal {
 public:
};

Message_MSQ_Load::Message_MSQ_Load(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.MSQ_Load)
}
Message_MSQ_Load::Message_MSQ_Load(const Message_MSQ_Load& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_programname().empty()) {
    programname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_programname(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.MSQ_Load)
}

void Message_MSQ_Load::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_MSQ_Load_megastructure_2eproto.base);
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_MSQ_Load::~Message_MSQ_Load() {
  // @@protoc_insertion_point(destructor:megastructure.Message.MSQ_Load)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_MSQ_Load::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  programname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_MSQ_Load::ArenaDtor(void* object) {
  Message_MSQ_Load* _this = reinterpret_cast< Message_MSQ_Load* >(object);
  (void)_this;
}
void Message_MSQ_Load::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_MSQ_Load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_MSQ_Load& Message_MSQ_Load::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_MSQ_Load_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_MSQ_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.MSQ_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  programname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_MSQ_Load::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string programname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_programname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.MSQ_Load.programname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_MSQ_Load::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.MSQ_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string programname = 1;
  if (this->programname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_programname().data(), static_cast<int>(this->_internal_programname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.MSQ_Load.programname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_programname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.MSQ_Load)
  return target;
}

size_t Message_MSQ_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.MSQ_Load)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string programname = 1;
  if (this->programname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_programname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_MSQ_Load::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.MSQ_Load)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_MSQ_Load* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_MSQ_Load>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.MSQ_Load)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.MSQ_Load)
    MergeFrom(*source);
  }
}

void Message_MSQ_Load::MergeFrom(const Message_MSQ_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.MSQ_Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.programname().size() > 0) {
    _internal_set_programname(from._internal_programname());
  }
}

void Message_MSQ_Load::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.MSQ_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_MSQ_Load::CopyFrom(const Message_MSQ_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.MSQ_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_MSQ_Load::IsInitialized() const {
  return true;
}

void Message_MSQ_Load::InternalSwap(Message_MSQ_Load* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  programname_.Swap(&other->programname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_MSQ_Load::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_SMS_Load::InitAsDefaultInstance() {
}
class Message_SMS_Load::_Internal {
 public:
};

Message_SMS_Load::Message_SMS_Load(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.SMS_Load)
}
Message_SMS_Load::Message_SMS_Load(const Message_SMS_Load& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.SMS_Load)
}

void Message_SMS_Load::SharedCtor() {
  success_ = false;
}

Message_SMS_Load::~Message_SMS_Load() {
  // @@protoc_insertion_point(destructor:megastructure.Message.SMS_Load)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_SMS_Load::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_SMS_Load::ArenaDtor(void* object) {
  Message_SMS_Load* _this = reinterpret_cast< Message_SMS_Load* >(object);
  (void)_this;
}
void Message_SMS_Load::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_SMS_Load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_SMS_Load& Message_SMS_Load::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_SMS_Load_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_SMS_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.SMS_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_SMS_Load::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_SMS_Load::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.SMS_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.SMS_Load)
  return target;
}

size_t Message_SMS_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.SMS_Load)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_SMS_Load::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.SMS_Load)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_SMS_Load* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_SMS_Load>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.SMS_Load)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.SMS_Load)
    MergeFrom(*source);
  }
}

void Message_SMS_Load::MergeFrom(const Message_SMS_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.SMS_Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_SMS_Load::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.SMS_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_SMS_Load::CopyFrom(const Message_SMS_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.SMS_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_SMS_Load::IsInitialized() const {
  return true;
}

void Message_SMS_Load::InternalSwap(Message_SMS_Load* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_SMS_Load::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_CHQ_Load::InitAsDefaultInstance() {
}
class Message_CHQ_Load::_Internal {
 public:
};

Message_CHQ_Load::Message_CHQ_Load(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.CHQ_Load)
}
Message_CHQ_Load::Message_CHQ_Load(const Message_CHQ_Load& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hostname().empty()) {
    hostname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hostname(),
      GetArena());
  }
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_programname().empty()) {
    programname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_programname(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.CHQ_Load)
}

void Message_CHQ_Load::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_CHQ_Load_megastructure_2eproto.base);
  hostname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  programname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_CHQ_Load::~Message_CHQ_Load() {
  // @@protoc_insertion_point(destructor:megastructure.Message.CHQ_Load)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_CHQ_Load::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  hostname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  programname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_CHQ_Load::ArenaDtor(void* object) {
  Message_CHQ_Load* _this = reinterpret_cast< Message_CHQ_Load* >(object);
  (void)_this;
}
void Message_CHQ_Load::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_CHQ_Load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_CHQ_Load& Message_CHQ_Load::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_CHQ_Load_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_CHQ_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.CHQ_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hostname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  programname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_CHQ_Load::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string hostname = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_hostname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHQ_Load.hostname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string programname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_programname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHQ_Load.programname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_CHQ_Load::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.CHQ_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hostname = 1;
  if (this->hostname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hostname().data(), static_cast<int>(this->_internal_hostname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHQ_Load.hostname");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hostname(), target);
  }

  // string programname = 2;
  if (this->programname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_programname().data(), static_cast<int>(this->_internal_programname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHQ_Load.programname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_programname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.CHQ_Load)
  return target;
}

size_t Message_CHQ_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.CHQ_Load)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hostname = 1;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hostname());
  }

  // string programname = 2;
  if (this->programname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_programname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_CHQ_Load::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.CHQ_Load)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_CHQ_Load* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_CHQ_Load>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.CHQ_Load)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.CHQ_Load)
    MergeFrom(*source);
  }
}

void Message_CHQ_Load::MergeFrom(const Message_CHQ_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.CHQ_Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hostname().size() > 0) {
    _internal_set_hostname(from._internal_hostname());
  }
  if (from.programname().size() > 0) {
    _internal_set_programname(from._internal_programname());
  }
}

void Message_CHQ_Load::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.CHQ_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_CHQ_Load::CopyFrom(const Message_CHQ_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.CHQ_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_CHQ_Load::IsInitialized() const {
  return true;
}

void Message_CHQ_Load::InternalSwap(Message_CHQ_Load* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  hostname_.Swap(&other->hostname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  programname_.Swap(&other->programname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_CHQ_Load::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_HCS_Load::InitAsDefaultInstance() {
}
class Message_HCS_Load::_Internal {
 public:
};

Message_HCS_Load::Message_HCS_Load(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.HCS_Load)
}
Message_HCS_Load::Message_HCS_Load(const Message_HCS_Load& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.HCS_Load)
}

void Message_HCS_Load::SharedCtor() {
  success_ = false;
}

Message_HCS_Load::~Message_HCS_Load() {
  // @@protoc_insertion_point(destructor:megastructure.Message.HCS_Load)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_HCS_Load::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_HCS_Load::ArenaDtor(void* object) {
  Message_HCS_Load* _this = reinterpret_cast< Message_HCS_Load* >(object);
  (void)_this;
}
void Message_HCS_Load::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_HCS_Load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_HCS_Load& Message_HCS_Load::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_HCS_Load_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_HCS_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.HCS_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_HCS_Load::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_HCS_Load::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.HCS_Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.HCS_Load)
  return target;
}

size_t Message_HCS_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.HCS_Load)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_HCS_Load::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.HCS_Load)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_HCS_Load* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_HCS_Load>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.HCS_Load)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.HCS_Load)
    MergeFrom(*source);
  }
}

void Message_HCS_Load::MergeFrom(const Message_HCS_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.HCS_Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_HCS_Load::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.HCS_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_HCS_Load::CopyFrom(const Message_HCS_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.HCS_Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_HCS_Load::IsInitialized() const {
  return true;
}

void Message_HCS_Load::InternalSwap(Message_HCS_Load* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_HCS_Load::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_HCQ_Buffer::InitAsDefaultInstance() {
}
class Message_HCQ_Buffer::_Internal {
 public:
};

Message_HCQ_Buffer::Message_HCQ_Buffer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.HCQ_Buffer)
}
Message_HCQ_Buffer::Message_HCQ_Buffer(const Message_HCQ_Buffer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buffername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buffername().empty()) {
    buffername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_buffername(),
      GetArena());
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.HCQ_Buffer)
}

void Message_HCQ_Buffer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_HCQ_Buffer_megastructure_2eproto.base);
  buffername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
}

Message_HCQ_Buffer::~Message_HCQ_Buffer() {
  // @@protoc_insertion_point(destructor:megastructure.Message.HCQ_Buffer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_HCQ_Buffer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  buffername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_HCQ_Buffer::ArenaDtor(void* object) {
  Message_HCQ_Buffer* _this = reinterpret_cast< Message_HCQ_Buffer* >(object);
  (void)_this;
}
void Message_HCQ_Buffer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_HCQ_Buffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_HCQ_Buffer& Message_HCQ_Buffer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_HCQ_Buffer_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_HCQ_Buffer::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.HCQ_Buffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  size_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_HCQ_Buffer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string buffername = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_buffername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.HCQ_Buffer.buffername"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_HCQ_Buffer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.HCQ_Buffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string buffername = 1;
  if (this->buffername().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buffername().data(), static_cast<int>(this->_internal_buffername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.HCQ_Buffer.buffername");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_buffername(), target);
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.HCQ_Buffer)
  return target;
}

size_t Message_HCQ_Buffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.HCQ_Buffer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string buffername = 1;
  if (this->buffername().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buffername());
  }

  // uint32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_HCQ_Buffer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.HCQ_Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_HCQ_Buffer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_HCQ_Buffer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.HCQ_Buffer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.HCQ_Buffer)
    MergeFrom(*source);
  }
}

void Message_HCQ_Buffer::MergeFrom(const Message_HCQ_Buffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.HCQ_Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffername().size() > 0) {
    _internal_set_buffername(from._internal_buffername());
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void Message_HCQ_Buffer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.HCQ_Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_HCQ_Buffer::CopyFrom(const Message_HCQ_Buffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.HCQ_Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_HCQ_Buffer::IsInitialized() const {
  return true;
}

void Message_HCQ_Buffer::InternalSwap(Message_HCQ_Buffer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffername_.Swap(&other->buffername_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_HCQ_Buffer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_CHS_Buffer::InitAsDefaultInstance() {
}
class Message_CHS_Buffer::_Internal {
 public:
};

Message_CHS_Buffer::Message_CHS_Buffer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.CHS_Buffer)
}
Message_CHS_Buffer::Message_CHS_Buffer(const Message_CHS_Buffer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buffername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_buffername().empty()) {
    buffername_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_buffername(),
      GetArena());
  }
  sharedname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sharedname().empty()) {
    sharedname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sharedname(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.CHS_Buffer)
}

void Message_CHS_Buffer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_CHS_Buffer_megastructure_2eproto.base);
  buffername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sharedname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_CHS_Buffer::~Message_CHS_Buffer() {
  // @@protoc_insertion_point(destructor:megastructure.Message.CHS_Buffer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_CHS_Buffer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  buffername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sharedname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_CHS_Buffer::ArenaDtor(void* object) {
  Message_CHS_Buffer* _this = reinterpret_cast< Message_CHS_Buffer* >(object);
  (void)_this;
}
void Message_CHS_Buffer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_CHS_Buffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_CHS_Buffer& Message_CHS_Buffer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_CHS_Buffer_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_CHS_Buffer::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.CHS_Buffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffername_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sharedname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_CHS_Buffer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string buffername = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_buffername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHS_Buffer.buffername"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sharedname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sharedname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "megastructure.Message.CHS_Buffer.sharedname"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_CHS_Buffer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.CHS_Buffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string buffername = 1;
  if (this->buffername().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_buffername().data(), static_cast<int>(this->_internal_buffername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHS_Buffer.buffername");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_buffername(), target);
  }

  // string sharedname = 2;
  if (this->sharedname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sharedname().data(), static_cast<int>(this->_internal_sharedname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "megastructure.Message.CHS_Buffer.sharedname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sharedname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.CHS_Buffer)
  return target;
}

size_t Message_CHS_Buffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.CHS_Buffer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string buffername = 1;
  if (this->buffername().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_buffername());
  }

  // string sharedname = 2;
  if (this->sharedname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sharedname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_CHS_Buffer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.CHS_Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_CHS_Buffer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_CHS_Buffer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.CHS_Buffer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.CHS_Buffer)
    MergeFrom(*source);
  }
}

void Message_CHS_Buffer::MergeFrom(const Message_CHS_Buffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.CHS_Buffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buffername().size() > 0) {
    _internal_set_buffername(from._internal_buffername());
  }
  if (from.sharedname().size() > 0) {
    _internal_set_sharedname(from._internal_sharedname());
  }
}

void Message_CHS_Buffer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.CHS_Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_CHS_Buffer::CopyFrom(const Message_CHS_Buffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.CHS_Buffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_CHS_Buffer::IsInitialized() const {
  return true;
}

void Message_CHS_Buffer::InternalSwap(Message_CHS_Buffer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  buffername_.Swap(&other->buffername_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sharedname_.Swap(&other->sharedname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_CHS_Buffer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Load_MSQ::InitAsDefaultInstance() {
}
class Message_Config_Load_MSQ::_Internal {
 public:
};

Message_Config_Load_MSQ::Message_Config_Load_MSQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Load.MSQ)
}
Message_Config_Load_MSQ::Message_Config_Load_MSQ(const Message_Config_Load_MSQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Load.MSQ)
}

void Message_Config_Load_MSQ::SharedCtor() {
}

Message_Config_Load_MSQ::~Message_Config_Load_MSQ() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Load.MSQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Load_MSQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Load_MSQ::ArenaDtor(void* object) {
  Message_Config_Load_MSQ* _this = reinterpret_cast< Message_Config_Load_MSQ* >(object);
  (void)_this;
}
void Message_Config_Load_MSQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Load_MSQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Load_MSQ& Message_Config_Load_MSQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Load_MSQ_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Load_MSQ::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Load.MSQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Load_MSQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Load_MSQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Load.MSQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Load.MSQ)
  return target;
}

size_t Message_Config_Load_MSQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Load.MSQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Load_MSQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Load.MSQ)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Load_MSQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Load_MSQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Load.MSQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Load.MSQ)
    MergeFrom(*source);
  }
}

void Message_Config_Load_MSQ::MergeFrom(const Message_Config_Load_MSQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Load.MSQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Config_Load_MSQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Load.MSQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Load_MSQ::CopyFrom(const Message_Config_Load_MSQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Load.MSQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Load_MSQ::IsInitialized() const {
  return true;
}

void Message_Config_Load_MSQ::InternalSwap(Message_Config_Load_MSQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Load_MSQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Load_SMS::InitAsDefaultInstance() {
}
class Message_Config_Load_SMS::_Internal {
 public:
};

Message_Config_Load_SMS::Message_Config_Load_SMS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Load.SMS)
}
Message_Config_Load_SMS::Message_Config_Load_SMS(const Message_Config_Load_SMS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Load.SMS)
}

void Message_Config_Load_SMS::SharedCtor() {
  success_ = false;
}

Message_Config_Load_SMS::~Message_Config_Load_SMS() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Load.SMS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Load_SMS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Load_SMS::ArenaDtor(void* object) {
  Message_Config_Load_SMS* _this = reinterpret_cast< Message_Config_Load_SMS* >(object);
  (void)_this;
}
void Message_Config_Load_SMS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Load_SMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Load_SMS& Message_Config_Load_SMS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Load_SMS_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Load_SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Load.SMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Load_SMS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Load_SMS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Load.SMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Load.SMS)
  return target;
}

size_t Message_Config_Load_SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Load.SMS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Load_SMS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Load.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Load_SMS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Load_SMS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Load.SMS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Load.SMS)
    MergeFrom(*source);
  }
}

void Message_Config_Load_SMS::MergeFrom(const Message_Config_Load_SMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Load.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_Config_Load_SMS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Load.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Load_SMS::CopyFrom(const Message_Config_Load_SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Load.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Load_SMS::IsInitialized() const {
  return true;
}

void Message_Config_Load_SMS::InternalSwap(Message_Config_Load_SMS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Load_SMS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Load_CHQ::InitAsDefaultInstance() {
}
class Message_Config_Load_CHQ::_Internal {
 public:
};

Message_Config_Load_CHQ::Message_Config_Load_CHQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Load.CHQ)
}
Message_Config_Load_CHQ::Message_Config_Load_CHQ(const Message_Config_Load_CHQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Load.CHQ)
}

void Message_Config_Load_CHQ::SharedCtor() {
}

Message_Config_Load_CHQ::~Message_Config_Load_CHQ() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Load.CHQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Load_CHQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Load_CHQ::ArenaDtor(void* object) {
  Message_Config_Load_CHQ* _this = reinterpret_cast< Message_Config_Load_CHQ* >(object);
  (void)_this;
}
void Message_Config_Load_CHQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Load_CHQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Load_CHQ& Message_Config_Load_CHQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Load_CHQ_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Load_CHQ::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Load.CHQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Load_CHQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Load_CHQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Load.CHQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Load.CHQ)
  return target;
}

size_t Message_Config_Load_CHQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Load.CHQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Load_CHQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Load.CHQ)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Load_CHQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Load_CHQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Load.CHQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Load.CHQ)
    MergeFrom(*source);
  }
}

void Message_Config_Load_CHQ::MergeFrom(const Message_Config_Load_CHQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Load.CHQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Config_Load_CHQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Load.CHQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Load_CHQ::CopyFrom(const Message_Config_Load_CHQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Load.CHQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Load_CHQ::IsInitialized() const {
  return true;
}

void Message_Config_Load_CHQ::InternalSwap(Message_Config_Load_CHQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Load_CHQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Load_HCS::InitAsDefaultInstance() {
}
class Message_Config_Load_HCS::_Internal {
 public:
};

Message_Config_Load_HCS::Message_Config_Load_HCS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Load.HCS)
}
Message_Config_Load_HCS::Message_Config_Load_HCS(const Message_Config_Load_HCS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Load.HCS)
}

void Message_Config_Load_HCS::SharedCtor() {
  success_ = false;
}

Message_Config_Load_HCS::~Message_Config_Load_HCS() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Load.HCS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Load_HCS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Load_HCS::ArenaDtor(void* object) {
  Message_Config_Load_HCS* _this = reinterpret_cast< Message_Config_Load_HCS* >(object);
  (void)_this;
}
void Message_Config_Load_HCS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Load_HCS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Load_HCS& Message_Config_Load_HCS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Load_HCS_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Load_HCS::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Load.HCS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Load_HCS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Load_HCS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Load.HCS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Load.HCS)
  return target;
}

size_t Message_Config_Load_HCS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Load.HCS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Load_HCS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Load.HCS)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Load_HCS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Load_HCS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Load.HCS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Load.HCS)
    MergeFrom(*source);
  }
}

void Message_Config_Load_HCS::MergeFrom(const Message_Config_Load_HCS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Load.HCS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_Config_Load_HCS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Load.HCS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Load_HCS::CopyFrom(const Message_Config_Load_HCS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Load.HCS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Load_HCS::IsInitialized() const {
  return true;
}

void Message_Config_Load_HCS::InternalSwap(Message_Config_Load_HCS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Load_HCS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Load::InitAsDefaultInstance() {
  ::megastructure::_Message_Config_Load_default_instance_.msq_ = const_cast< ::megastructure::Message_Config_Load_MSQ*>(
      ::megastructure::Message_Config_Load_MSQ::internal_default_instance());
  ::megastructure::_Message_Config_Load_default_instance_.sms_ = const_cast< ::megastructure::Message_Config_Load_SMS*>(
      ::megastructure::Message_Config_Load_SMS::internal_default_instance());
  ::megastructure::_Message_Config_Load_default_instance_.chq_ = const_cast< ::megastructure::Message_Config_Load_CHQ*>(
      ::megastructure::Message_Config_Load_CHQ::internal_default_instance());
  ::megastructure::_Message_Config_Load_default_instance_.hcs_ = const_cast< ::megastructure::Message_Config_Load_HCS*>(
      ::megastructure::Message_Config_Load_HCS::internal_default_instance());
}
class Message_Config_Load::_Internal {
 public:
  static const ::megastructure::Message_Config_Load_MSQ& msq(const Message_Config_Load* msg);
  static const ::megastructure::Message_Config_Load_SMS& sms(const Message_Config_Load* msg);
  static const ::megastructure::Message_Config_Load_CHQ& chq(const Message_Config_Load* msg);
  static const ::megastructure::Message_Config_Load_HCS& hcs(const Message_Config_Load* msg);
};

const ::megastructure::Message_Config_Load_MSQ&
Message_Config_Load::_Internal::msq(const Message_Config_Load* msg) {
  return *msg->foobar_.msq_;
}
const ::megastructure::Message_Config_Load_SMS&
Message_Config_Load::_Internal::sms(const Message_Config_Load* msg) {
  return *msg->foobar_.sms_;
}
const ::megastructure::Message_Config_Load_CHQ&
Message_Config_Load::_Internal::chq(const Message_Config_Load* msg) {
  return *msg->foobar_.chq_;
}
const ::megastructure::Message_Config_Load_HCS&
Message_Config_Load::_Internal::hcs(const Message_Config_Load* msg) {
  return *msg->foobar_.hcs_;
}
void Message_Config_Load::set_allocated_msq(::megastructure::Message_Config_Load_MSQ* msq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (msq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(msq);
    if (message_arena != submessage_arena) {
      msq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msq, submessage_arena);
    }
    set_has_msq();
    foobar_.msq_ = msq;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Load.msq)
}
void Message_Config_Load::set_allocated_sms(::megastructure::Message_Config_Load_SMS* sms) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (sms) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sms);
    if (message_arena != submessage_arena) {
      sms = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sms, submessage_arena);
    }
    set_has_sms();
    foobar_.sms_ = sms;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Load.sms)
}
void Message_Config_Load::set_allocated_chq(::megastructure::Message_Config_Load_CHQ* chq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chq);
    if (message_arena != submessage_arena) {
      chq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chq, submessage_arena);
    }
    set_has_chq();
    foobar_.chq_ = chq;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Load.chq)
}
void Message_Config_Load::set_allocated_hcs(::megastructure::Message_Config_Load_HCS* hcs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcs);
    if (message_arena != submessage_arena) {
      hcs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcs, submessage_arena);
    }
    set_has_hcs();
    foobar_.hcs_ = hcs;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Load.hcs)
}
Message_Config_Load::Message_Config_Load(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Load)
}
Message_Config_Load::Message_Config_Load(const Message_Config_Load& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_foobar();
  switch (from.foobar_case()) {
    case kMsq: {
      _internal_mutable_msq()->::megastructure::Message_Config_Load_MSQ::MergeFrom(from._internal_msq());
      break;
    }
    case kSms: {
      _internal_mutable_sms()->::megastructure::Message_Config_Load_SMS::MergeFrom(from._internal_sms());
      break;
    }
    case kChq: {
      _internal_mutable_chq()->::megastructure::Message_Config_Load_CHQ::MergeFrom(from._internal_chq());
      break;
    }
    case kHcs: {
      _internal_mutable_hcs()->::megastructure::Message_Config_Load_HCS::MergeFrom(from._internal_hcs());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Load)
}

void Message_Config_Load::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_Config_Load_megastructure_2eproto.base);
  clear_has_foobar();
}

Message_Config_Load::~Message_Config_Load() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Load)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Load::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_foobar()) {
    clear_foobar();
  }
}

void Message_Config_Load::ArenaDtor(void* object) {
  Message_Config_Load* _this = reinterpret_cast< Message_Config_Load* >(object);
  (void)_this;
}
void Message_Config_Load::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Load::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Load& Message_Config_Load::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Load_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Load::clear_foobar() {
// @@protoc_insertion_point(one_of_clear_start:megastructure.Message.Config.Load)
  switch (foobar_case()) {
    case kMsq: {
      if (GetArena() == nullptr) {
        delete foobar_.msq_;
      }
      break;
    }
    case kSms: {
      if (GetArena() == nullptr) {
        delete foobar_.sms_;
      }
      break;
    }
    case kChq: {
      if (GetArena() == nullptr) {
        delete foobar_.chq_;
      }
      break;
    }
    case kHcs: {
      if (GetArena() == nullptr) {
        delete foobar_.hcs_;
      }
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOOBAR_NOT_SET;
}


void Message_Config_Load::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_foobar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Load::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .megastructure.Message.Config.Load.MSQ msq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msq(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Load.SMS sms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sms(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Load.CHQ chq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_chq(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Load.HCS hcs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Load::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Load)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .megastructure.Message.Config.Load.MSQ msq = 1;
  if (_internal_has_msq()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msq(this), target, stream);
  }

  // .megastructure.Message.Config.Load.SMS sms = 2;
  if (_internal_has_sms()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::sms(this), target, stream);
  }

  // .megastructure.Message.Config.Load.CHQ chq = 3;
  if (_internal_has_chq()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::chq(this), target, stream);
  }

  // .megastructure.Message.Config.Load.HCS hcs = 4;
  if (_internal_has_hcs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::hcs(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Load)
  return target;
}

size_t Message_Config_Load::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Load)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (foobar_case()) {
    // .megastructure.Message.Config.Load.MSQ msq = 1;
    case kMsq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.msq_);
      break;
    }
    // .megastructure.Message.Config.Load.SMS sms = 2;
    case kSms: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.sms_);
      break;
    }
    // .megastructure.Message.Config.Load.CHQ chq = 3;
    case kChq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chq_);
      break;
    }
    // .megastructure.Message.Config.Load.HCS hcs = 4;
    case kHcs: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcs_);
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Load::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Load)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Load* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Load>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Load)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Load)
    MergeFrom(*source);
  }
}

void Message_Config_Load::MergeFrom(const Message_Config_Load& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Load)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.foobar_case()) {
    case kMsq: {
      _internal_mutable_msq()->::megastructure::Message_Config_Load_MSQ::MergeFrom(from._internal_msq());
      break;
    }
    case kSms: {
      _internal_mutable_sms()->::megastructure::Message_Config_Load_SMS::MergeFrom(from._internal_sms());
      break;
    }
    case kChq: {
      _internal_mutable_chq()->::megastructure::Message_Config_Load_CHQ::MergeFrom(from._internal_chq());
      break;
    }
    case kHcs: {
      _internal_mutable_hcs()->::megastructure::Message_Config_Load_HCS::MergeFrom(from._internal_hcs());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
}

void Message_Config_Load::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Load::CopyFrom(const Message_Config_Load& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Load)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Load::IsInitialized() const {
  return true;
}

void Message_Config_Load::InternalSwap(Message_Config_Load* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(foobar_, other->foobar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Load::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Save_MSQ::InitAsDefaultInstance() {
}
class Message_Config_Save_MSQ::_Internal {
 public:
};

Message_Config_Save_MSQ::Message_Config_Save_MSQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Save.MSQ)
}
Message_Config_Save_MSQ::Message_Config_Save_MSQ(const Message_Config_Save_MSQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Save.MSQ)
}

void Message_Config_Save_MSQ::SharedCtor() {
}

Message_Config_Save_MSQ::~Message_Config_Save_MSQ() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Save.MSQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Save_MSQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Save_MSQ::ArenaDtor(void* object) {
  Message_Config_Save_MSQ* _this = reinterpret_cast< Message_Config_Save_MSQ* >(object);
  (void)_this;
}
void Message_Config_Save_MSQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Save_MSQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Save_MSQ& Message_Config_Save_MSQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Save_MSQ_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Save_MSQ::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Save.MSQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Save_MSQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Save_MSQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Save.MSQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Save.MSQ)
  return target;
}

size_t Message_Config_Save_MSQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Save.MSQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Save_MSQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Save.MSQ)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Save_MSQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Save_MSQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Save.MSQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Save.MSQ)
    MergeFrom(*source);
  }
}

void Message_Config_Save_MSQ::MergeFrom(const Message_Config_Save_MSQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Save.MSQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Config_Save_MSQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Save.MSQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Save_MSQ::CopyFrom(const Message_Config_Save_MSQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Save.MSQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Save_MSQ::IsInitialized() const {
  return true;
}

void Message_Config_Save_MSQ::InternalSwap(Message_Config_Save_MSQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Save_MSQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Save_SMS::InitAsDefaultInstance() {
}
class Message_Config_Save_SMS::_Internal {
 public:
};

Message_Config_Save_SMS::Message_Config_Save_SMS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Save.SMS)
}
Message_Config_Save_SMS::Message_Config_Save_SMS(const Message_Config_Save_SMS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Save.SMS)
}

void Message_Config_Save_SMS::SharedCtor() {
  success_ = false;
}

Message_Config_Save_SMS::~Message_Config_Save_SMS() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Save.SMS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Save_SMS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Save_SMS::ArenaDtor(void* object) {
  Message_Config_Save_SMS* _this = reinterpret_cast< Message_Config_Save_SMS* >(object);
  (void)_this;
}
void Message_Config_Save_SMS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Save_SMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Save_SMS& Message_Config_Save_SMS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Save_SMS_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Save_SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Save.SMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Save_SMS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Save_SMS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Save.SMS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Save.SMS)
  return target;
}

size_t Message_Config_Save_SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Save.SMS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Save_SMS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Save.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Save_SMS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Save_SMS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Save.SMS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Save.SMS)
    MergeFrom(*source);
  }
}

void Message_Config_Save_SMS::MergeFrom(const Message_Config_Save_SMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Save.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_Config_Save_SMS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Save.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Save_SMS::CopyFrom(const Message_Config_Save_SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Save.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Save_SMS::IsInitialized() const {
  return true;
}

void Message_Config_Save_SMS::InternalSwap(Message_Config_Save_SMS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Save_SMS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Save_CHQ::InitAsDefaultInstance() {
}
class Message_Config_Save_CHQ::_Internal {
 public:
};

Message_Config_Save_CHQ::Message_Config_Save_CHQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Save.CHQ)
}
Message_Config_Save_CHQ::Message_Config_Save_CHQ(const Message_Config_Save_CHQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Save.CHQ)
}

void Message_Config_Save_CHQ::SharedCtor() {
}

Message_Config_Save_CHQ::~Message_Config_Save_CHQ() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Save.CHQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Save_CHQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Save_CHQ::ArenaDtor(void* object) {
  Message_Config_Save_CHQ* _this = reinterpret_cast< Message_Config_Save_CHQ* >(object);
  (void)_this;
}
void Message_Config_Save_CHQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Save_CHQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Save_CHQ& Message_Config_Save_CHQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Save_CHQ_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Save_CHQ::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Save.CHQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Save_CHQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Save_CHQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Save.CHQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Save.CHQ)
  return target;
}

size_t Message_Config_Save_CHQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Save.CHQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Save_CHQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Save.CHQ)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Save_CHQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Save_CHQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Save.CHQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Save.CHQ)
    MergeFrom(*source);
  }
}

void Message_Config_Save_CHQ::MergeFrom(const Message_Config_Save_CHQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Save.CHQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Config_Save_CHQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Save.CHQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Save_CHQ::CopyFrom(const Message_Config_Save_CHQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Save.CHQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Save_CHQ::IsInitialized() const {
  return true;
}

void Message_Config_Save_CHQ::InternalSwap(Message_Config_Save_CHQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Save_CHQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Save_HCS::InitAsDefaultInstance() {
}
class Message_Config_Save_HCS::_Internal {
 public:
};

Message_Config_Save_HCS::Message_Config_Save_HCS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Save.HCS)
}
Message_Config_Save_HCS::Message_Config_Save_HCS(const Message_Config_Save_HCS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Save.HCS)
}

void Message_Config_Save_HCS::SharedCtor() {
  success_ = false;
}

Message_Config_Save_HCS::~Message_Config_Save_HCS() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Save.HCS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Save_HCS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_Config_Save_HCS::ArenaDtor(void* object) {
  Message_Config_Save_HCS* _this = reinterpret_cast< Message_Config_Save_HCS* >(object);
  (void)_this;
}
void Message_Config_Save_HCS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Save_HCS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Save_HCS& Message_Config_Save_HCS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Save_HCS_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Save_HCS::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Save.HCS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Save_HCS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Save_HCS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Save.HCS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Save.HCS)
  return target;
}

size_t Message_Config_Save_HCS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Save.HCS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Save_HCS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Save.HCS)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Save_HCS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Save_HCS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Save.HCS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Save.HCS)
    MergeFrom(*source);
  }
}

void Message_Config_Save_HCS::MergeFrom(const Message_Config_Save_HCS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Save.HCS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    _internal_set_success(from._internal_success());
  }
}

void Message_Config_Save_HCS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Save.HCS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Save_HCS::CopyFrom(const Message_Config_Save_HCS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Save.HCS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Save_HCS::IsInitialized() const {
  return true;
}

void Message_Config_Save_HCS::InternalSwap(Message_Config_Save_HCS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Save_HCS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config_Save::InitAsDefaultInstance() {
  ::megastructure::_Message_Config_Save_default_instance_.msq_ = const_cast< ::megastructure::Message_Config_Save_MSQ*>(
      ::megastructure::Message_Config_Save_MSQ::internal_default_instance());
  ::megastructure::_Message_Config_Save_default_instance_.sms_ = const_cast< ::megastructure::Message_Config_Save_SMS*>(
      ::megastructure::Message_Config_Save_SMS::internal_default_instance());
  ::megastructure::_Message_Config_Save_default_instance_.chq_ = const_cast< ::megastructure::Message_Config_Save_CHQ*>(
      ::megastructure::Message_Config_Save_CHQ::internal_default_instance());
  ::megastructure::_Message_Config_Save_default_instance_.hcs_ = const_cast< ::megastructure::Message_Config_Save_HCS*>(
      ::megastructure::Message_Config_Save_HCS::internal_default_instance());
}
class Message_Config_Save::_Internal {
 public:
  static const ::megastructure::Message_Config_Save_MSQ& msq(const Message_Config_Save* msg);
  static const ::megastructure::Message_Config_Save_SMS& sms(const Message_Config_Save* msg);
  static const ::megastructure::Message_Config_Save_CHQ& chq(const Message_Config_Save* msg);
  static const ::megastructure::Message_Config_Save_HCS& hcs(const Message_Config_Save* msg);
};

const ::megastructure::Message_Config_Save_MSQ&
Message_Config_Save::_Internal::msq(const Message_Config_Save* msg) {
  return *msg->foobar_.msq_;
}
const ::megastructure::Message_Config_Save_SMS&
Message_Config_Save::_Internal::sms(const Message_Config_Save* msg) {
  return *msg->foobar_.sms_;
}
const ::megastructure::Message_Config_Save_CHQ&
Message_Config_Save::_Internal::chq(const Message_Config_Save* msg) {
  return *msg->foobar_.chq_;
}
const ::megastructure::Message_Config_Save_HCS&
Message_Config_Save::_Internal::hcs(const Message_Config_Save* msg) {
  return *msg->foobar_.hcs_;
}
void Message_Config_Save::set_allocated_msq(::megastructure::Message_Config_Save_MSQ* msq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (msq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(msq);
    if (message_arena != submessage_arena) {
      msq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msq, submessage_arena);
    }
    set_has_msq();
    foobar_.msq_ = msq;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Save.msq)
}
void Message_Config_Save::set_allocated_sms(::megastructure::Message_Config_Save_SMS* sms) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (sms) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sms);
    if (message_arena != submessage_arena) {
      sms = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sms, submessage_arena);
    }
    set_has_sms();
    foobar_.sms_ = sms;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Save.sms)
}
void Message_Config_Save::set_allocated_chq(::megastructure::Message_Config_Save_CHQ* chq) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chq) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chq);
    if (message_arena != submessage_arena) {
      chq = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chq, submessage_arena);
    }
    set_has_chq();
    foobar_.chq_ = chq;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Save.chq)
}
void Message_Config_Save::set_allocated_hcs(::megastructure::Message_Config_Save_HCS* hcs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcs);
    if (message_arena != submessage_arena) {
      hcs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcs, submessage_arena);
    }
    set_has_hcs();
    foobar_.hcs_ = hcs;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.Save.hcs)
}
Message_Config_Save::Message_Config_Save(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config.Save)
}
Message_Config_Save::Message_Config_Save(const Message_Config_Save& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_foobar();
  switch (from.foobar_case()) {
    case kMsq: {
      _internal_mutable_msq()->::megastructure::Message_Config_Save_MSQ::MergeFrom(from._internal_msq());
      break;
    }
    case kSms: {
      _internal_mutable_sms()->::megastructure::Message_Config_Save_SMS::MergeFrom(from._internal_sms());
      break;
    }
    case kChq: {
      _internal_mutable_chq()->::megastructure::Message_Config_Save_CHQ::MergeFrom(from._internal_chq());
      break;
    }
    case kHcs: {
      _internal_mutable_hcs()->::megastructure::Message_Config_Save_HCS::MergeFrom(from._internal_hcs());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config.Save)
}

void Message_Config_Save::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_Config_Save_megastructure_2eproto.base);
  clear_has_foobar();
}

Message_Config_Save::~Message_Config_Save() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config.Save)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config_Save::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_foobar()) {
    clear_foobar();
  }
}

void Message_Config_Save::ArenaDtor(void* object) {
  Message_Config_Save* _this = reinterpret_cast< Message_Config_Save* >(object);
  (void)_this;
}
void Message_Config_Save::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config_Save::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config_Save& Message_Config_Save::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_Save_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config_Save::clear_foobar() {
// @@protoc_insertion_point(one_of_clear_start:megastructure.Message.Config.Save)
  switch (foobar_case()) {
    case kMsq: {
      if (GetArena() == nullptr) {
        delete foobar_.msq_;
      }
      break;
    }
    case kSms: {
      if (GetArena() == nullptr) {
        delete foobar_.sms_;
      }
      break;
    }
    case kChq: {
      if (GetArena() == nullptr) {
        delete foobar_.chq_;
      }
      break;
    }
    case kHcs: {
      if (GetArena() == nullptr) {
        delete foobar_.hcs_;
      }
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOOBAR_NOT_SET;
}


void Message_Config_Save::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config.Save)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_foobar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config_Save::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .megastructure.Message.Config.Save.MSQ msq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_msq(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Save.SMS sms = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sms(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Save.CHQ chq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_chq(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Save.HCS hcs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config_Save::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config.Save)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .megastructure.Message.Config.Save.MSQ msq = 1;
  if (_internal_has_msq()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::msq(this), target, stream);
  }

  // .megastructure.Message.Config.Save.SMS sms = 2;
  if (_internal_has_sms()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::sms(this), target, stream);
  }

  // .megastructure.Message.Config.Save.CHQ chq = 3;
  if (_internal_has_chq()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::chq(this), target, stream);
  }

  // .megastructure.Message.Config.Save.HCS hcs = 4;
  if (_internal_has_hcs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::hcs(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config.Save)
  return target;
}

size_t Message_Config_Save::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config.Save)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (foobar_case()) {
    // .megastructure.Message.Config.Save.MSQ msq = 1;
    case kMsq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.msq_);
      break;
    }
    // .megastructure.Message.Config.Save.SMS sms = 2;
    case kSms: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.sms_);
      break;
    }
    // .megastructure.Message.Config.Save.CHQ chq = 3;
    case kChq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chq_);
      break;
    }
    // .megastructure.Message.Config.Save.HCS hcs = 4;
    case kHcs: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcs_);
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config_Save::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config.Save)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config_Save* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config_Save>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config.Save)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config.Save)
    MergeFrom(*source);
  }
}

void Message_Config_Save::MergeFrom(const Message_Config_Save& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config.Save)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.foobar_case()) {
    case kMsq: {
      _internal_mutable_msq()->::megastructure::Message_Config_Save_MSQ::MergeFrom(from._internal_msq());
      break;
    }
    case kSms: {
      _internal_mutable_sms()->::megastructure::Message_Config_Save_SMS::MergeFrom(from._internal_sms());
      break;
    }
    case kChq: {
      _internal_mutable_chq()->::megastructure::Message_Config_Save_CHQ::MergeFrom(from._internal_chq());
      break;
    }
    case kHcs: {
      _internal_mutable_hcs()->::megastructure::Message_Config_Save_HCS::MergeFrom(from._internal_hcs());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
}

void Message_Config_Save::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config.Save)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config_Save::CopyFrom(const Message_Config_Save& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config.Save)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config_Save::IsInitialized() const {
  return true;
}

void Message_Config_Save::InternalSwap(Message_Config_Save* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(foobar_, other->foobar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config_Save::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Config::InitAsDefaultInstance() {
  ::megastructure::_Message_Config_default_instance_.load_ = const_cast< ::megastructure::Message_Config_Load*>(
      ::megastructure::Message_Config_Load::internal_default_instance());
  ::megastructure::_Message_Config_default_instance_.save_ = const_cast< ::megastructure::Message_Config_Save*>(
      ::megastructure::Message_Config_Save::internal_default_instance());
}
class Message_Config::_Internal {
 public:
  static const ::megastructure::Message_Config_Load& load(const Message_Config* msg);
  static const ::megastructure::Message_Config_Save& save(const Message_Config* msg);
};

const ::megastructure::Message_Config_Load&
Message_Config::_Internal::load(const Message_Config* msg) {
  return *msg->foobar_.load_;
}
const ::megastructure::Message_Config_Save&
Message_Config::_Internal::save(const Message_Config* msg) {
  return *msg->foobar_.save_;
}
void Message_Config::set_allocated_load(::megastructure::Message_Config_Load* load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(load);
    if (message_arena != submessage_arena) {
      load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, load, submessage_arena);
    }
    set_has_load();
    foobar_.load_ = load;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.load)
}
void Message_Config::set_allocated_save(::megastructure::Message_Config_Save* save) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (save) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(save);
    if (message_arena != submessage_arena) {
      save = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, save, submessage_arena);
    }
    set_has_save();
    foobar_.save_ = save;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.Config.save)
}
Message_Config::Message_Config(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.Config)
}
Message_Config::Message_Config(const Message_Config& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_foobar();
  switch (from.foobar_case()) {
    case kLoad: {
      _internal_mutable_load()->::megastructure::Message_Config_Load::MergeFrom(from._internal_load());
      break;
    }
    case kSave: {
      _internal_mutable_save()->::megastructure::Message_Config_Save::MergeFrom(from._internal_save());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.Config)
}

void Message_Config::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_Config_megastructure_2eproto.base);
  clear_has_foobar();
}

Message_Config::~Message_Config() {
  // @@protoc_insertion_point(destructor:megastructure.Message.Config)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_Config::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_foobar()) {
    clear_foobar();
  }
}

void Message_Config::ArenaDtor(void* object) {
  Message_Config* _this = reinterpret_cast< Message_Config* >(object);
  (void)_this;
}
void Message_Config::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Config& Message_Config::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Config_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_Config::clear_foobar() {
// @@protoc_insertion_point(one_of_clear_start:megastructure.Message.Config)
  switch (foobar_case()) {
    case kLoad: {
      if (GetArena() == nullptr) {
        delete foobar_.load_;
      }
      break;
    }
    case kSave: {
      if (GetArena() == nullptr) {
        delete foobar_.save_;
      }
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOOBAR_NOT_SET;
}


void Message_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.Config)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_foobar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_Config::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .megastructure.Message.Config.Load load = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_load(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config.Save save = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_save(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Config::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.Config)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .megastructure.Message.Config.Load load = 1;
  if (_internal_has_load()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::load(this), target, stream);
  }

  // .megastructure.Message.Config.Save save = 2;
  if (_internal_has_save()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::save(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.Config)
  return target;
}

size_t Message_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.Config)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (foobar_case()) {
    // .megastructure.Message.Config.Load load = 1;
    case kLoad: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.load_);
      break;
    }
    // .megastructure.Message.Config.Save save = 2;
    case kSave: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.save_);
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Config::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Config* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Config>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.Config)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.Config)
    MergeFrom(*source);
  }
}

void Message_Config::MergeFrom(const Message_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.foobar_case()) {
    case kLoad: {
      _internal_mutable_load()->::megastructure::Message_Config_Load::MergeFrom(from._internal_load());
      break;
    }
    case kSave: {
      _internal_mutable_save()->::megastructure::Message_Config_Save::MergeFrom(from._internal_save());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
}

void Message_Config::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Config::CopyFrom(const Message_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Config::IsInitialized() const {
  return true;
}

void Message_Config::InternalSwap(Message_Config* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(foobar_, other->foobar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Config::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Request_Read::InitAsDefaultInstance() {
}
class Message_EG_Msg_Request_Read::_Internal {
 public:
};

Message_EG_Msg_Request_Read::Message_EG_Msg_Request_Read(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Request.Read)
}
Message_EG_Msg_Request_Read::Message_EG_Msg_Request_Read(const Message_EG_Msg_Request_Read& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Request.Read)
}

void Message_EG_Msg_Request_Read::SharedCtor() {
}

Message_EG_Msg_Request_Read::~Message_EG_Msg_Request_Read() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Request.Read)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Request_Read::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_EG_Msg_Request_Read::ArenaDtor(void* object) {
  Message_EG_Msg_Request_Read* _this = reinterpret_cast< Message_EG_Msg_Request_Read* >(object);
  (void)_this;
}
void Message_EG_Msg_Request_Read::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Request_Read::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Request_Read& Message_EG_Msg_Request_Read::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Request_Read_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Request_Read::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Request.Read)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Request_Read::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Request_Read::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Request.Read)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Request.Read)
  return target;
}

size_t Message_EG_Msg_Request_Read::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Request.Read)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Request_Read::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Request.Read)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Request_Read* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Request_Read>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Request.Read)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Request.Read)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Request_Read::MergeFrom(const Message_EG_Msg_Request_Read& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Request.Read)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_EG_Msg_Request_Read::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Request.Read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Request_Read::CopyFrom(const Message_EG_Msg_Request_Read& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Request.Read)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Request_Read::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Request_Read::InternalSwap(Message_EG_Msg_Request_Read* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Request_Read::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Request_Write::InitAsDefaultInstance() {
}
class Message_EG_Msg_Request_Write::_Internal {
 public:
};

Message_EG_Msg_Request_Write::Message_EG_Msg_Request_Write(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Request.Write)
}
Message_EG_Msg_Request_Write::Message_EG_Msg_Request_Write(const Message_EG_Msg_Request_Write& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Request.Write)
}

void Message_EG_Msg_Request_Write::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_EG_Msg_Request_Write_megastructure_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_EG_Msg_Request_Write::~Message_EG_Msg_Request_Write() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Request.Write)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Request_Write::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_EG_Msg_Request_Write::ArenaDtor(void* object) {
  Message_EG_Msg_Request_Write* _this = reinterpret_cast< Message_EG_Msg_Request_Write* >(object);
  (void)_this;
}
void Message_EG_Msg_Request_Write::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Request_Write::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Request_Write& Message_EG_Msg_Request_Write::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Request_Write_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Request_Write::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Request.Write)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Request_Write::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Request_Write::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Request.Write)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Request.Write)
  return target;
}

size_t Message_EG_Msg_Request_Write::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Request.Write)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Request_Write::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Request.Write)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Request_Write* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Request_Write>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Request.Write)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Request.Write)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Request_Write::MergeFrom(const Message_EG_Msg_Request_Write& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Request.Write)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void Message_EG_Msg_Request_Write::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Request.Write)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Request_Write::CopyFrom(const Message_EG_Msg_Request_Write& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Request.Write)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Request_Write::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Request_Write::InternalSwap(Message_EG_Msg_Request_Write* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Request_Write::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Request_Lock::InitAsDefaultInstance() {
}
class Message_EG_Msg_Request_Lock::_Internal {
 public:
};

Message_EG_Msg_Request_Lock::Message_EG_Msg_Request_Lock(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Request.Lock)
}
Message_EG_Msg_Request_Lock::Message_EG_Msg_Request_Lock(const Message_EG_Msg_Request_Lock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  read_ = from.read_;
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Request.Lock)
}

void Message_EG_Msg_Request_Lock::SharedCtor() {
  read_ = false;
}

Message_EG_Msg_Request_Lock::~Message_EG_Msg_Request_Lock() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Request.Lock)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Request_Lock::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_EG_Msg_Request_Lock::ArenaDtor(void* object) {
  Message_EG_Msg_Request_Lock* _this = reinterpret_cast< Message_EG_Msg_Request_Lock* >(object);
  (void)_this;
}
void Message_EG_Msg_Request_Lock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Request_Lock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Request_Lock& Message_EG_Msg_Request_Lock::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Request_Lock_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Request_Lock::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Request.Lock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  read_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Request_Lock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool read = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          read_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Request_Lock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Request.Lock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool read = 1;
  if (this->read() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_read(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Request.Lock)
  return target;
}

size_t Message_EG_Msg_Request_Lock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Request.Lock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool read = 1;
  if (this->read() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Request_Lock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Request.Lock)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Request_Lock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Request_Lock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Request.Lock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Request.Lock)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Request_Lock::MergeFrom(const Message_EG_Msg_Request_Lock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Request.Lock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.read() != 0) {
    _internal_set_read(from._internal_read());
  }
}

void Message_EG_Msg_Request_Lock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Request.Lock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Request_Lock::CopyFrom(const Message_EG_Msg_Request_Lock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Request.Lock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Request_Lock::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Request_Lock::InternalSwap(Message_EG_Msg_Request_Lock* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(read_, other->read_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Request_Lock::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Request_Unlock::InitAsDefaultInstance() {
}
class Message_EG_Msg_Request_Unlock::_Internal {
 public:
};

Message_EG_Msg_Request_Unlock::Message_EG_Msg_Request_Unlock(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Request.Unlock)
}
Message_EG_Msg_Request_Unlock::Message_EG_Msg_Request_Unlock(const Message_EG_Msg_Request_Unlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Request.Unlock)
}

void Message_EG_Msg_Request_Unlock::SharedCtor() {
}

Message_EG_Msg_Request_Unlock::~Message_EG_Msg_Request_Unlock() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Request.Unlock)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Request_Unlock::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_EG_Msg_Request_Unlock::ArenaDtor(void* object) {
  Message_EG_Msg_Request_Unlock* _this = reinterpret_cast< Message_EG_Msg_Request_Unlock* >(object);
  (void)_this;
}
void Message_EG_Msg_Request_Unlock::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Request_Unlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Request_Unlock& Message_EG_Msg_Request_Unlock::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Request_Unlock_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Request_Unlock::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Request.Unlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Request_Unlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Request_Unlock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Request.Unlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Request.Unlock)
  return target;
}

size_t Message_EG_Msg_Request_Unlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Request.Unlock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Request_Unlock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Request.Unlock)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Request_Unlock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Request_Unlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Request.Unlock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Request.Unlock)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Request_Unlock::MergeFrom(const Message_EG_Msg_Request_Unlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Request.Unlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_EG_Msg_Request_Unlock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Request.Unlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Request_Unlock::CopyFrom(const Message_EG_Msg_Request_Unlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Request.Unlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Request_Unlock::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Request_Unlock::InternalSwap(Message_EG_Msg_Request_Unlock* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Request_Unlock::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Request::InitAsDefaultInstance() {
  ::megastructure::_Message_EG_Msg_Request_default_instance_.read_ = const_cast< ::megastructure::Message_EG_Msg_Request_Read*>(
      ::megastructure::Message_EG_Msg_Request_Read::internal_default_instance());
  ::megastructure::_Message_EG_Msg_Request_default_instance_.write_ = const_cast< ::megastructure::Message_EG_Msg_Request_Write*>(
      ::megastructure::Message_EG_Msg_Request_Write::internal_default_instance());
  ::megastructure::_Message_EG_Msg_Request_default_instance_.lock_ = const_cast< ::megastructure::Message_EG_Msg_Request_Lock*>(
      ::megastructure::Message_EG_Msg_Request_Lock::internal_default_instance());
  ::megastructure::_Message_EG_Msg_Request_default_instance_.unlock_ = const_cast< ::megastructure::Message_EG_Msg_Request_Unlock*>(
      ::megastructure::Message_EG_Msg_Request_Unlock::internal_default_instance());
}
class Message_EG_Msg_Request::_Internal {
 public:
  static const ::megastructure::Message_EG_Msg_Request_Read& read(const Message_EG_Msg_Request* msg);
  static const ::megastructure::Message_EG_Msg_Request_Write& write(const Message_EG_Msg_Request* msg);
  static const ::megastructure::Message_EG_Msg_Request_Lock& lock(const Message_EG_Msg_Request* msg);
  static const ::megastructure::Message_EG_Msg_Request_Unlock& unlock(const Message_EG_Msg_Request* msg);
};

const ::megastructure::Message_EG_Msg_Request_Read&
Message_EG_Msg_Request::_Internal::read(const Message_EG_Msg_Request* msg) {
  return *msg->foobar_.read_;
}
const ::megastructure::Message_EG_Msg_Request_Write&
Message_EG_Msg_Request::_Internal::write(const Message_EG_Msg_Request* msg) {
  return *msg->foobar_.write_;
}
const ::megastructure::Message_EG_Msg_Request_Lock&
Message_EG_Msg_Request::_Internal::lock(const Message_EG_Msg_Request* msg) {
  return *msg->foobar_.lock_;
}
const ::megastructure::Message_EG_Msg_Request_Unlock&
Message_EG_Msg_Request::_Internal::unlock(const Message_EG_Msg_Request* msg) {
  return *msg->foobar_.unlock_;
}
void Message_EG_Msg_Request::set_allocated_read(::megastructure::Message_EG_Msg_Request_Read* read) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (read) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(read);
    if (message_arena != submessage_arena) {
      read = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, read, submessage_arena);
    }
    set_has_read();
    foobar_.read_ = read;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.Request.read)
}
void Message_EG_Msg_Request::set_allocated_write(::megastructure::Message_EG_Msg_Request_Write* write) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (write) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(write);
    if (message_arena != submessage_arena) {
      write = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, write, submessage_arena);
    }
    set_has_write();
    foobar_.write_ = write;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.Request.write)
}
void Message_EG_Msg_Request::set_allocated_lock(::megastructure::Message_EG_Msg_Request_Lock* lock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (lock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(lock);
    if (message_arena != submessage_arena) {
      lock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lock, submessage_arena);
    }
    set_has_lock();
    foobar_.lock_ = lock;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.Request.lock)
}
void Message_EG_Msg_Request::set_allocated_unlock(::megastructure::Message_EG_Msg_Request_Unlock* unlock) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (unlock) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(unlock);
    if (message_arena != submessage_arena) {
      unlock = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unlock, submessage_arena);
    }
    set_has_unlock();
    foobar_.unlock_ = unlock;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.Request.unlock)
}
Message_EG_Msg_Request::Message_EG_Msg_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Request)
}
Message_EG_Msg_Request::Message_EG_Msg_Request(const Message_EG_Msg_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coordinator_, &from.coordinator_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_) -
    reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  clear_has_foobar();
  switch (from.foobar_case()) {
    case kRead: {
      _internal_mutable_read()->::megastructure::Message_EG_Msg_Request_Read::MergeFrom(from._internal_read());
      break;
    }
    case kWrite: {
      _internal_mutable_write()->::megastructure::Message_EG_Msg_Request_Write::MergeFrom(from._internal_write());
      break;
    }
    case kLock: {
      _internal_mutable_lock()->::megastructure::Message_EG_Msg_Request_Lock::MergeFrom(from._internal_lock());
      break;
    }
    case kUnlock: {
      _internal_mutable_unlock()->::megastructure::Message_EG_Msg_Request_Unlock::MergeFrom(from._internal_unlock());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Request)
}

void Message_EG_Msg_Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_EG_Msg_Request_megastructure_2eproto.base);
  ::memset(&coordinator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  clear_has_foobar();
}

Message_EG_Msg_Request::~Message_EG_Msg_Request() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_foobar()) {
    clear_foobar();
  }
}

void Message_EG_Msg_Request::ArenaDtor(void* object) {
  Message_EG_Msg_Request* _this = reinterpret_cast< Message_EG_Msg_Request* >(object);
  (void)_this;
}
void Message_EG_Msg_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Request& Message_EG_Msg_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Request_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Request::clear_foobar() {
// @@protoc_insertion_point(one_of_clear_start:megastructure.Message.EG_Msg.Request)
  switch (foobar_case()) {
    case kRead: {
      if (GetArena() == nullptr) {
        delete foobar_.read_;
      }
      break;
    }
    case kWrite: {
      if (GetArena() == nullptr) {
        delete foobar_.write_;
      }
      break;
    }
    case kLock: {
      if (GetArena() == nullptr) {
        delete foobar_.lock_;
      }
      break;
    }
    case kUnlock: {
      if (GetArena() == nullptr) {
        delete foobar_.unlock_;
      }
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOOBAR_NOT_SET;
}


void Message_EG_Msg_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coordinator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  clear_foobar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 coordinator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coordinator_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          host_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Request.Read read = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_read(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Request.Write write = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_write(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Request.Lock lock = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_lock(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Request.Unlock unlock = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_unlock(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coordinator = 1;
  if (this->coordinator() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coordinator(), target);
  }

  // uint32 host = 2;
  if (this->host() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_host(), target);
  }

  // .megastructure.Message.EG_Msg.Request.Read read = 3;
  if (_internal_has_read()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::read(this), target, stream);
  }

  // .megastructure.Message.EG_Msg.Request.Write write = 4;
  if (_internal_has_write()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::write(this), target, stream);
  }

  // .megastructure.Message.EG_Msg.Request.Lock lock = 6;
  if (_internal_has_lock()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::lock(this), target, stream);
  }

  // .megastructure.Message.EG_Msg.Request.Unlock unlock = 7;
  if (_internal_has_unlock()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::unlock(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Request)
  return target;
}

size_t Message_EG_Msg_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 coordinator = 1;
  if (this->coordinator() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_coordinator());
  }

  // uint32 host = 2;
  if (this->host() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_host());
  }

  switch (foobar_case()) {
    // .megastructure.Message.EG_Msg.Request.Read read = 3;
    case kRead: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.read_);
      break;
    }
    // .megastructure.Message.EG_Msg.Request.Write write = 4;
    case kWrite: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.write_);
      break;
    }
    // .megastructure.Message.EG_Msg.Request.Lock lock = 6;
    case kLock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.lock_);
      break;
    }
    // .megastructure.Message.EG_Msg.Request.Unlock unlock = 7;
    case kUnlock: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.unlock_);
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Request)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Request::MergeFrom(const Message_EG_Msg_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coordinator() != 0) {
    _internal_set_coordinator(from._internal_coordinator());
  }
  if (from.host() != 0) {
    _internal_set_host(from._internal_host());
  }
  switch (from.foobar_case()) {
    case kRead: {
      _internal_mutable_read()->::megastructure::Message_EG_Msg_Request_Read::MergeFrom(from._internal_read());
      break;
    }
    case kWrite: {
      _internal_mutable_write()->::megastructure::Message_EG_Msg_Request_Write::MergeFrom(from._internal_write());
      break;
    }
    case kLock: {
      _internal_mutable_lock()->::megastructure::Message_EG_Msg_Request_Lock::MergeFrom(from._internal_lock());
      break;
    }
    case kUnlock: {
      _internal_mutable_unlock()->::megastructure::Message_EG_Msg_Request_Unlock::MergeFrom(from._internal_unlock());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
}

void Message_EG_Msg_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Request::CopyFrom(const Message_EG_Msg_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Request::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Request::InternalSwap(Message_EG_Msg_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_EG_Msg_Request, host_)
      + sizeof(Message_EG_Msg_Request::host_)
      - PROTOBUF_FIELD_OFFSET(Message_EG_Msg_Request, coordinator_)>(
          reinterpret_cast<char*>(&coordinator_),
          reinterpret_cast<char*>(&other->coordinator_));
  swap(foobar_, other->foobar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Response::InitAsDefaultInstance() {
}
class Message_EG_Msg_Response::_Internal {
 public:
};

Message_EG_Msg_Response::Message_EG_Msg_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Response)
}
Message_EG_Msg_Response::Message_EG_Msg_Response(const Message_EG_Msg_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  ::memcpy(&coordinator_, &from.coordinator_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_) -
    reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Response)
}

void Message_EG_Msg_Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_EG_Msg_Response_megastructure_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&coordinator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
}

Message_EG_Msg_Response::~Message_EG_Msg_Response() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_EG_Msg_Response::ArenaDtor(void* object) {
  Message_EG_Msg_Response* _this = reinterpret_cast< Message_EG_Msg_Response* >(object);
  (void)_this;
}
void Message_EG_Msg_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Response& Message_EG_Msg_Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Response_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&coordinator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 coordinator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coordinator_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          host_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coordinator = 1;
  if (this->coordinator() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coordinator(), target);
  }

  // uint32 host = 2;
  if (this->host() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_host(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Response)
  return target;
}

size_t Message_EG_Msg_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // uint32 coordinator = 1;
  if (this->coordinator() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_coordinator());
  }

  // uint32 host = 2;
  if (this->host() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_host());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Response)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Response::MergeFrom(const Message_EG_Msg_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.coordinator() != 0) {
    _internal_set_coordinator(from._internal_coordinator());
  }
  if (from.host() != 0) {
    _internal_set_host(from._internal_host());
  }
}

void Message_EG_Msg_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Response::CopyFrom(const Message_EG_Msg_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Response::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Response::InternalSwap(Message_EG_Msg_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_EG_Msg_Response, host_)
      + sizeof(Message_EG_Msg_Response::host_)
      - PROTOBUF_FIELD_OFFSET(Message_EG_Msg_Response, coordinator_)>(
          reinterpret_cast<char*>(&coordinator_),
          reinterpret_cast<char*>(&other->coordinator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Error::InitAsDefaultInstance() {
}
class Message_EG_Msg_Error::_Internal {
 public:
};

Message_EG_Msg_Error::Message_EG_Msg_Error(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Error)
}
Message_EG_Msg_Error::Message_EG_Msg_Error(const Message_EG_Msg_Error& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coordinator_, &from.coordinator_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_) -
    reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Error)
}

void Message_EG_Msg_Error::SharedCtor() {
  ::memset(&coordinator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
}

Message_EG_Msg_Error::~Message_EG_Msg_Error() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Error)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Error::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Message_EG_Msg_Error::ArenaDtor(void* object) {
  Message_EG_Msg_Error* _this = reinterpret_cast< Message_EG_Msg_Error* >(object);
  (void)_this;
}
void Message_EG_Msg_Error::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Error& Message_EG_Msg_Error::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Error_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Error::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&coordinator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&coordinator_)) + sizeof(host_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Error::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 coordinator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          coordinator_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          host_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Error::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 coordinator = 1;
  if (this->coordinator() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coordinator(), target);
  }

  // uint32 host = 2;
  if (this->host() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_host(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Error)
  return target;
}

size_t Message_EG_Msg_Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Error)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 coordinator = 1;
  if (this->coordinator() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_coordinator());
  }

  // uint32 host = 2;
  if (this->host() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_host());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Error::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Error* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Error>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Error)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Error)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Error::MergeFrom(const Message_EG_Msg_Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.coordinator() != 0) {
    _internal_set_coordinator(from._internal_coordinator());
  }
  if (from.host() != 0) {
    _internal_set_host(from._internal_host());
  }
}

void Message_EG_Msg_Error::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Error::CopyFrom(const Message_EG_Msg_Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Error::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Error::InternalSwap(Message_EG_Msg_Error* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_EG_Msg_Error, host_)
      + sizeof(Message_EG_Msg_Error::host_)
      - PROTOBUF_FIELD_OFFSET(Message_EG_Msg_Error, coordinator_)>(
          reinterpret_cast<char*>(&coordinator_),
          reinterpret_cast<char*>(&other->coordinator_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Error::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg_Event::InitAsDefaultInstance() {
}
class Message_EG_Msg_Event::_Internal {
 public:
};

Message_EG_Msg_Event::Message_EG_Msg_Event(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg.Event)
}
Message_EG_Msg_Event::Message_EG_Msg_Event(const Message_EG_Msg_Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg.Event)
}

void Message_EG_Msg_Event::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_EG_Msg_Event_megastructure_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_EG_Msg_Event::~Message_EG_Msg_Event() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg.Event)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg_Event::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_EG_Msg_Event::ArenaDtor(void* object) {
  Message_EG_Msg_Event* _this = reinterpret_cast< Message_EG_Msg_Event* >(object);
  (void)_this;
}
void Message_EG_Msg_Event::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg_Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg_Event& Message_EG_Msg_Event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_Event_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg_Event::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg.Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg_Event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg_Event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg.Event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg.Event)
  return target;
}

size_t Message_EG_Msg_Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg.Event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg_Event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg_Event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg_Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg.Event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg.Event)
    MergeFrom(*source);
  }
}

void Message_EG_Msg_Event::MergeFrom(const Message_EG_Msg_Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void Message_EG_Msg_Event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg_Event::CopyFrom(const Message_EG_Msg_Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg_Event::IsInitialized() const {
  return true;
}

void Message_EG_Msg_Event::InternalSwap(Message_EG_Msg_Event* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg_Event::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_EG_Msg::InitAsDefaultInstance() {
  ::megastructure::_Message_EG_Msg_default_instance_.request_ = const_cast< ::megastructure::Message_EG_Msg_Request*>(
      ::megastructure::Message_EG_Msg_Request::internal_default_instance());
  ::megastructure::_Message_EG_Msg_default_instance_.response_ = const_cast< ::megastructure::Message_EG_Msg_Response*>(
      ::megastructure::Message_EG_Msg_Response::internal_default_instance());
  ::megastructure::_Message_EG_Msg_default_instance_.error_ = const_cast< ::megastructure::Message_EG_Msg_Error*>(
      ::megastructure::Message_EG_Msg_Error::internal_default_instance());
  ::megastructure::_Message_EG_Msg_default_instance_.event_ = const_cast< ::megastructure::Message_EG_Msg_Event*>(
      ::megastructure::Message_EG_Msg_Event::internal_default_instance());
}
class Message_EG_Msg::_Internal {
 public:
  static const ::megastructure::Message_EG_Msg_Request& request(const Message_EG_Msg* msg);
  static const ::megastructure::Message_EG_Msg_Response& response(const Message_EG_Msg* msg);
  static const ::megastructure::Message_EG_Msg_Error& error(const Message_EG_Msg* msg);
  static const ::megastructure::Message_EG_Msg_Event& event(const Message_EG_Msg* msg);
};

const ::megastructure::Message_EG_Msg_Request&
Message_EG_Msg::_Internal::request(const Message_EG_Msg* msg) {
  return *msg->foobar_.request_;
}
const ::megastructure::Message_EG_Msg_Response&
Message_EG_Msg::_Internal::response(const Message_EG_Msg* msg) {
  return *msg->foobar_.response_;
}
const ::megastructure::Message_EG_Msg_Error&
Message_EG_Msg::_Internal::error(const Message_EG_Msg* msg) {
  return *msg->foobar_.error_;
}
const ::megastructure::Message_EG_Msg_Event&
Message_EG_Msg::_Internal::event(const Message_EG_Msg* msg) {
  return *msg->foobar_.event_;
}
void Message_EG_Msg::set_allocated_request(::megastructure::Message_EG_Msg_Request* request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(request);
    if (message_arena != submessage_arena) {
      request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
    foobar_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.request)
}
void Message_EG_Msg::set_allocated_response(::megastructure::Message_EG_Msg_Response* response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(response);
    if (message_arena != submessage_arena) {
      response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    set_has_response();
    foobar_.response_ = response;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.response)
}
void Message_EG_Msg::set_allocated_error(::megastructure::Message_EG_Msg_Error* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    foobar_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.error)
}
void Message_EG_Msg::set_allocated_event(::megastructure::Message_EG_Msg_Event* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(event);
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    set_has_event();
    foobar_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.EG_Msg.event)
}
Message_EG_Msg::Message_EG_Msg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message.EG_Msg)
}
Message_EG_Msg::Message_EG_Msg(const Message_EG_Msg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&cycle_) -
    reinterpret_cast<char*>(&type_)) + sizeof(cycle_));
  clear_has_foobar();
  switch (from.foobar_case()) {
    case kRequest: {
      _internal_mutable_request()->::megastructure::Message_EG_Msg_Request::MergeFrom(from._internal_request());
      break;
    }
    case kResponse: {
      _internal_mutable_response()->::megastructure::Message_EG_Msg_Response::MergeFrom(from._internal_response());
      break;
    }
    case kError: {
      _internal_mutable_error()->::megastructure::Message_EG_Msg_Error::MergeFrom(from._internal_error());
      break;
    }
    case kEvent: {
      _internal_mutable_event()->::megastructure::Message_EG_Msg_Event::MergeFrom(from._internal_event());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message.EG_Msg)
}

void Message_EG_Msg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_EG_Msg_megastructure_2eproto.base);
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cycle_) -
      reinterpret_cast<char*>(&type_)) + sizeof(cycle_));
  clear_has_foobar();
}

Message_EG_Msg::~Message_EG_Msg() {
  // @@protoc_insertion_point(destructor:megastructure.Message.EG_Msg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message_EG_Msg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_foobar()) {
    clear_foobar();
  }
}

void Message_EG_Msg::ArenaDtor(void* object) {
  Message_EG_Msg* _this = reinterpret_cast< Message_EG_Msg* >(object);
  (void)_this;
}
void Message_EG_Msg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message_EG_Msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_EG_Msg& Message_EG_Msg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_EG_Msg_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message_EG_Msg::clear_foobar() {
// @@protoc_insertion_point(one_of_clear_start:megastructure.Message.EG_Msg)
  switch (foobar_case()) {
    case kRequest: {
      if (GetArena() == nullptr) {
        delete foobar_.request_;
      }
      break;
    }
    case kResponse: {
      if (GetArena() == nullptr) {
        delete foobar_.response_;
      }
      break;
    }
    case kError: {
      if (GetArena() == nullptr) {
        delete foobar_.error_;
      }
      break;
    }
    case kEvent: {
      if (GetArena() == nullptr) {
        delete foobar_.event_;
      }
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOOBAR_NOT_SET;
}


void Message_EG_Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message.EG_Msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cycle_) -
      reinterpret_cast<char*>(&type_)) + sizeof(cycle_));
  clear_foobar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message_EG_Msg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 instance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          instance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 cycle = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          cycle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Request request = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Response response = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Error error = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg.Event event = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_EG_Msg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message.EG_Msg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // uint32 instance = 2;
  if (this->instance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_instance(), target);
  }

  // uint32 cycle = 3;
  if (this->cycle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_cycle(), target);
  }

  // .megastructure.Message.EG_Msg.Request request = 4;
  if (_internal_has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::request(this), target, stream);
  }

  // .megastructure.Message.EG_Msg.Response response = 5;
  if (_internal_has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::response(this), target, stream);
  }

  // .megastructure.Message.EG_Msg.Error error = 6;
  if (_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::error(this), target, stream);
  }

  // .megastructure.Message.EG_Msg.Event event = 7;
  if (_internal_has_event()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::event(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message.EG_Msg)
  return target;
}

size_t Message_EG_Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message.EG_Msg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // uint32 instance = 2;
  if (this->instance() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_instance());
  }

  // uint32 cycle = 3;
  if (this->cycle() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cycle());
  }

  switch (foobar_case()) {
    // .megastructure.Message.EG_Msg.Request request = 4;
    case kRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.request_);
      break;
    }
    // .megastructure.Message.EG_Msg.Response response = 5;
    case kResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.response_);
      break;
    }
    // .megastructure.Message.EG_Msg.Error error = 6;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.error_);
      break;
    }
    // .megastructure.Message.EG_Msg.Event event = 7;
    case kEvent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.event_);
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_EG_Msg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message.EG_Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_EG_Msg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_EG_Msg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message.EG_Msg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message.EG_Msg)
    MergeFrom(*source);
  }
}

void Message_EG_Msg::MergeFrom(const Message_EG_Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message.EG_Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.instance() != 0) {
    _internal_set_instance(from._internal_instance());
  }
  if (from.cycle() != 0) {
    _internal_set_cycle(from._internal_cycle());
  }
  switch (from.foobar_case()) {
    case kRequest: {
      _internal_mutable_request()->::megastructure::Message_EG_Msg_Request::MergeFrom(from._internal_request());
      break;
    }
    case kResponse: {
      _internal_mutable_response()->::megastructure::Message_EG_Msg_Response::MergeFrom(from._internal_response());
      break;
    }
    case kError: {
      _internal_mutable_error()->::megastructure::Message_EG_Msg_Error::MergeFrom(from._internal_error());
      break;
    }
    case kEvent: {
      _internal_mutable_event()->::megastructure::Message_EG_Msg_Event::MergeFrom(from._internal_event());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
}

void Message_EG_Msg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message.EG_Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_EG_Msg::CopyFrom(const Message_EG_Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message.EG_Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_EG_Msg::IsInitialized() const {
  return true;
}

void Message_EG_Msg::InternalSwap(Message_EG_Msg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Message_EG_Msg, cycle_)
      + sizeof(Message_EG_Msg::cycle_)
      - PROTOBUF_FIELD_OFFSET(Message_EG_Msg, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
  swap(foobar_, other->foobar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_EG_Msg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::megastructure::_Message_default_instance_.smq_enroll_ = const_cast< ::megastructure::Message_SMQ_Enroll*>(
      ::megastructure::Message_SMQ_Enroll::internal_default_instance());
  ::megastructure::_Message_default_instance_.mss_enroll_ = const_cast< ::megastructure::Message_MSS_Enroll*>(
      ::megastructure::Message_MSS_Enroll::internal_default_instance());
  ::megastructure::_Message_default_instance_.msq_alive_ = const_cast< ::megastructure::Message_MSQ_Alive*>(
      ::megastructure::Message_MSQ_Alive::internal_default_instance());
  ::megastructure::_Message_default_instance_.sms_alive_ = const_cast< ::megastructure::Message_SMS_Alive*>(
      ::megastructure::Message_SMS_Alive::internal_default_instance());
  ::megastructure::_Message_default_instance_.hcq_enroll_ = const_cast< ::megastructure::Message_HCQ_Enroll*>(
      ::megastructure::Message_HCQ_Enroll::internal_default_instance());
  ::megastructure::_Message_default_instance_.chs_enroll_ = const_cast< ::megastructure::Message_CHS_Enroll*>(
      ::megastructure::Message_CHS_Enroll::internal_default_instance());
  ::megastructure::_Message_default_instance_.hcq_enrolleg_ = const_cast< ::megastructure::Message_HCQ_EnrollEG*>(
      ::megastructure::Message_HCQ_EnrollEG::internal_default_instance());
  ::megastructure::_Message_default_instance_.chs_enrolleg_ = const_cast< ::megastructure::Message_CHS_EnrollEG*>(
      ::megastructure::Message_CHS_EnrollEG::internal_default_instance());
  ::megastructure::_Message_default_instance_.chq_alive_ = const_cast< ::megastructure::Message_CHQ_Alive*>(
      ::megastructure::Message_CHQ_Alive::internal_default_instance());
  ::megastructure::_Message_default_instance_.hcs_alive_ = const_cast< ::megastructure::Message_HCS_Alive*>(
      ::megastructure::Message_HCS_Alive::internal_default_instance());
  ::megastructure::_Message_default_instance_.msq_load_ = const_cast< ::megastructure::Message_MSQ_Load*>(
      ::megastructure::Message_MSQ_Load::internal_default_instance());
  ::megastructure::_Message_default_instance_.sms_load_ = const_cast< ::megastructure::Message_SMS_Load*>(
      ::megastructure::Message_SMS_Load::internal_default_instance());
  ::megastructure::_Message_default_instance_.chq_load_ = const_cast< ::megastructure::Message_CHQ_Load*>(
      ::megastructure::Message_CHQ_Load::internal_default_instance());
  ::megastructure::_Message_default_instance_.hcs_load_ = const_cast< ::megastructure::Message_HCS_Load*>(
      ::megastructure::Message_HCS_Load::internal_default_instance());
  ::megastructure::_Message_default_instance_.hcq_buffer_ = const_cast< ::megastructure::Message_HCQ_Buffer*>(
      ::megastructure::Message_HCQ_Buffer::internal_default_instance());
  ::megastructure::_Message_default_instance_.chs_buffer_ = const_cast< ::megastructure::Message_CHS_Buffer*>(
      ::megastructure::Message_CHS_Buffer::internal_default_instance());
  ::megastructure::_Message_default_instance_.config_msg_ = const_cast< ::megastructure::Message_Config*>(
      ::megastructure::Message_Config::internal_default_instance());
  ::megastructure::_Message_default_instance_.eg_msg_ = const_cast< ::megastructure::Message_EG_Msg*>(
      ::megastructure::Message_EG_Msg::internal_default_instance());
}
class Message::_Internal {
 public:
  static const ::megastructure::Message_SMQ_Enroll& smq_enroll(const Message* msg);
  static const ::megastructure::Message_MSS_Enroll& mss_enroll(const Message* msg);
  static const ::megastructure::Message_MSQ_Alive& msq_alive(const Message* msg);
  static const ::megastructure::Message_SMS_Alive& sms_alive(const Message* msg);
  static const ::megastructure::Message_HCQ_Enroll& hcq_enroll(const Message* msg);
  static const ::megastructure::Message_CHS_Enroll& chs_enroll(const Message* msg);
  static const ::megastructure::Message_HCQ_EnrollEG& hcq_enrolleg(const Message* msg);
  static const ::megastructure::Message_CHS_EnrollEG& chs_enrolleg(const Message* msg);
  static const ::megastructure::Message_CHQ_Alive& chq_alive(const Message* msg);
  static const ::megastructure::Message_HCS_Alive& hcs_alive(const Message* msg);
  static const ::megastructure::Message_MSQ_Load& msq_load(const Message* msg);
  static const ::megastructure::Message_SMS_Load& sms_load(const Message* msg);
  static const ::megastructure::Message_CHQ_Load& chq_load(const Message* msg);
  static const ::megastructure::Message_HCS_Load& hcs_load(const Message* msg);
  static const ::megastructure::Message_HCQ_Buffer& hcq_buffer(const Message* msg);
  static const ::megastructure::Message_CHS_Buffer& chs_buffer(const Message* msg);
  static const ::megastructure::Message_Config& config_msg(const Message* msg);
  static const ::megastructure::Message_EG_Msg& eg_msg(const Message* msg);
};

const ::megastructure::Message_SMQ_Enroll&
Message::_Internal::smq_enroll(const Message* msg) {
  return *msg->foobar_.smq_enroll_;
}
const ::megastructure::Message_MSS_Enroll&
Message::_Internal::mss_enroll(const Message* msg) {
  return *msg->foobar_.mss_enroll_;
}
const ::megastructure::Message_MSQ_Alive&
Message::_Internal::msq_alive(const Message* msg) {
  return *msg->foobar_.msq_alive_;
}
const ::megastructure::Message_SMS_Alive&
Message::_Internal::sms_alive(const Message* msg) {
  return *msg->foobar_.sms_alive_;
}
const ::megastructure::Message_HCQ_Enroll&
Message::_Internal::hcq_enroll(const Message* msg) {
  return *msg->foobar_.hcq_enroll_;
}
const ::megastructure::Message_CHS_Enroll&
Message::_Internal::chs_enroll(const Message* msg) {
  return *msg->foobar_.chs_enroll_;
}
const ::megastructure::Message_HCQ_EnrollEG&
Message::_Internal::hcq_enrolleg(const Message* msg) {
  return *msg->foobar_.hcq_enrolleg_;
}
const ::megastructure::Message_CHS_EnrollEG&
Message::_Internal::chs_enrolleg(const Message* msg) {
  return *msg->foobar_.chs_enrolleg_;
}
const ::megastructure::Message_CHQ_Alive&
Message::_Internal::chq_alive(const Message* msg) {
  return *msg->foobar_.chq_alive_;
}
const ::megastructure::Message_HCS_Alive&
Message::_Internal::hcs_alive(const Message* msg) {
  return *msg->foobar_.hcs_alive_;
}
const ::megastructure::Message_MSQ_Load&
Message::_Internal::msq_load(const Message* msg) {
  return *msg->foobar_.msq_load_;
}
const ::megastructure::Message_SMS_Load&
Message::_Internal::sms_load(const Message* msg) {
  return *msg->foobar_.sms_load_;
}
const ::megastructure::Message_CHQ_Load&
Message::_Internal::chq_load(const Message* msg) {
  return *msg->foobar_.chq_load_;
}
const ::megastructure::Message_HCS_Load&
Message::_Internal::hcs_load(const Message* msg) {
  return *msg->foobar_.hcs_load_;
}
const ::megastructure::Message_HCQ_Buffer&
Message::_Internal::hcq_buffer(const Message* msg) {
  return *msg->foobar_.hcq_buffer_;
}
const ::megastructure::Message_CHS_Buffer&
Message::_Internal::chs_buffer(const Message* msg) {
  return *msg->foobar_.chs_buffer_;
}
const ::megastructure::Message_Config&
Message::_Internal::config_msg(const Message* msg) {
  return *msg->foobar_.config_msg_;
}
const ::megastructure::Message_EG_Msg&
Message::_Internal::eg_msg(const Message* msg) {
  return *msg->foobar_.eg_msg_;
}
void Message::set_allocated_smq_enroll(::megastructure::Message_SMQ_Enroll* smq_enroll) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (smq_enroll) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(smq_enroll);
    if (message_arena != submessage_arena) {
      smq_enroll = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, smq_enroll, submessage_arena);
    }
    set_has_smq_enroll();
    foobar_.smq_enroll_ = smq_enroll;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.smq_enroll)
}
void Message::set_allocated_mss_enroll(::megastructure::Message_MSS_Enroll* mss_enroll) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (mss_enroll) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(mss_enroll);
    if (message_arena != submessage_arena) {
      mss_enroll = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mss_enroll, submessage_arena);
    }
    set_has_mss_enroll();
    foobar_.mss_enroll_ = mss_enroll;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.mss_enroll)
}
void Message::set_allocated_msq_alive(::megastructure::Message_MSQ_Alive* msq_alive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (msq_alive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(msq_alive);
    if (message_arena != submessage_arena) {
      msq_alive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msq_alive, submessage_arena);
    }
    set_has_msq_alive();
    foobar_.msq_alive_ = msq_alive;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.msq_alive)
}
void Message::set_allocated_sms_alive(::megastructure::Message_SMS_Alive* sms_alive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (sms_alive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sms_alive);
    if (message_arena != submessage_arena) {
      sms_alive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sms_alive, submessage_arena);
    }
    set_has_sms_alive();
    foobar_.sms_alive_ = sms_alive;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.sms_alive)
}
void Message::set_allocated_hcq_enroll(::megastructure::Message_HCQ_Enroll* hcq_enroll) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcq_enroll) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcq_enroll);
    if (message_arena != submessage_arena) {
      hcq_enroll = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcq_enroll, submessage_arena);
    }
    set_has_hcq_enroll();
    foobar_.hcq_enroll_ = hcq_enroll;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.hcq_enroll)
}
void Message::set_allocated_chs_enroll(::megastructure::Message_CHS_Enroll* chs_enroll) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chs_enroll) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chs_enroll);
    if (message_arena != submessage_arena) {
      chs_enroll = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chs_enroll, submessage_arena);
    }
    set_has_chs_enroll();
    foobar_.chs_enroll_ = chs_enroll;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.chs_enroll)
}
void Message::set_allocated_hcq_enrolleg(::megastructure::Message_HCQ_EnrollEG* hcq_enrolleg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcq_enrolleg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcq_enrolleg);
    if (message_arena != submessage_arena) {
      hcq_enrolleg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcq_enrolleg, submessage_arena);
    }
    set_has_hcq_enrolleg();
    foobar_.hcq_enrolleg_ = hcq_enrolleg;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.hcq_enrolleg)
}
void Message::set_allocated_chs_enrolleg(::megastructure::Message_CHS_EnrollEG* chs_enrolleg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chs_enrolleg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chs_enrolleg);
    if (message_arena != submessage_arena) {
      chs_enrolleg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chs_enrolleg, submessage_arena);
    }
    set_has_chs_enrolleg();
    foobar_.chs_enrolleg_ = chs_enrolleg;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.chs_enrolleg)
}
void Message::set_allocated_chq_alive(::megastructure::Message_CHQ_Alive* chq_alive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chq_alive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chq_alive);
    if (message_arena != submessage_arena) {
      chq_alive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chq_alive, submessage_arena);
    }
    set_has_chq_alive();
    foobar_.chq_alive_ = chq_alive;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.chq_alive)
}
void Message::set_allocated_hcs_alive(::megastructure::Message_HCS_Alive* hcs_alive) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcs_alive) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcs_alive);
    if (message_arena != submessage_arena) {
      hcs_alive = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcs_alive, submessage_arena);
    }
    set_has_hcs_alive();
    foobar_.hcs_alive_ = hcs_alive;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.hcs_alive)
}
void Message::set_allocated_msq_load(::megastructure::Message_MSQ_Load* msq_load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (msq_load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(msq_load);
    if (message_arena != submessage_arena) {
      msq_load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, msq_load, submessage_arena);
    }
    set_has_msq_load();
    foobar_.msq_load_ = msq_load;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.msq_load)
}
void Message::set_allocated_sms_load(::megastructure::Message_SMS_Load* sms_load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (sms_load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(sms_load);
    if (message_arena != submessage_arena) {
      sms_load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sms_load, submessage_arena);
    }
    set_has_sms_load();
    foobar_.sms_load_ = sms_load;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.sms_load)
}
void Message::set_allocated_chq_load(::megastructure::Message_CHQ_Load* chq_load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chq_load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chq_load);
    if (message_arena != submessage_arena) {
      chq_load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chq_load, submessage_arena);
    }
    set_has_chq_load();
    foobar_.chq_load_ = chq_load;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.chq_load)
}
void Message::set_allocated_hcs_load(::megastructure::Message_HCS_Load* hcs_load) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcs_load) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcs_load);
    if (message_arena != submessage_arena) {
      hcs_load = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcs_load, submessage_arena);
    }
    set_has_hcs_load();
    foobar_.hcs_load_ = hcs_load;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.hcs_load)
}
void Message::set_allocated_hcq_buffer(::megastructure::Message_HCQ_Buffer* hcq_buffer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (hcq_buffer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hcq_buffer);
    if (message_arena != submessage_arena) {
      hcq_buffer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hcq_buffer, submessage_arena);
    }
    set_has_hcq_buffer();
    foobar_.hcq_buffer_ = hcq_buffer;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.hcq_buffer)
}
void Message::set_allocated_chs_buffer(::megastructure::Message_CHS_Buffer* chs_buffer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (chs_buffer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(chs_buffer);
    if (message_arena != submessage_arena) {
      chs_buffer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chs_buffer, submessage_arena);
    }
    set_has_chs_buffer();
    foobar_.chs_buffer_ = chs_buffer;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.chs_buffer)
}
void Message::set_allocated_config_msg(::megastructure::Message_Config* config_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (config_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(config_msg);
    if (message_arena != submessage_arena) {
      config_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config_msg, submessage_arena);
    }
    set_has_config_msg();
    foobar_.config_msg_ = config_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.config_msg)
}
void Message::set_allocated_eg_msg(::megastructure::Message_EG_Msg* eg_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_foobar();
  if (eg_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(eg_msg);
    if (message_arena != submessage_arena) {
      eg_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, eg_msg, submessage_arena);
    }
    set_has_eg_msg();
    foobar_.eg_msg_ = eg_msg;
  }
  // @@protoc_insertion_point(field_set_allocated:megastructure.Message.eg_msg)
}
Message::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:megastructure.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_foobar();
  switch (from.foobar_case()) {
    case kSmqEnroll: {
      _internal_mutable_smq_enroll()->::megastructure::Message_SMQ_Enroll::MergeFrom(from._internal_smq_enroll());
      break;
    }
    case kMssEnroll: {
      _internal_mutable_mss_enroll()->::megastructure::Message_MSS_Enroll::MergeFrom(from._internal_mss_enroll());
      break;
    }
    case kMsqAlive: {
      _internal_mutable_msq_alive()->::megastructure::Message_MSQ_Alive::MergeFrom(from._internal_msq_alive());
      break;
    }
    case kSmsAlive: {
      _internal_mutable_sms_alive()->::megastructure::Message_SMS_Alive::MergeFrom(from._internal_sms_alive());
      break;
    }
    case kHcqEnroll: {
      _internal_mutable_hcq_enroll()->::megastructure::Message_HCQ_Enroll::MergeFrom(from._internal_hcq_enroll());
      break;
    }
    case kChsEnroll: {
      _internal_mutable_chs_enroll()->::megastructure::Message_CHS_Enroll::MergeFrom(from._internal_chs_enroll());
      break;
    }
    case kHcqEnrolleg: {
      _internal_mutable_hcq_enrolleg()->::megastructure::Message_HCQ_EnrollEG::MergeFrom(from._internal_hcq_enrolleg());
      break;
    }
    case kChsEnrolleg: {
      _internal_mutable_chs_enrolleg()->::megastructure::Message_CHS_EnrollEG::MergeFrom(from._internal_chs_enrolleg());
      break;
    }
    case kChqAlive: {
      _internal_mutable_chq_alive()->::megastructure::Message_CHQ_Alive::MergeFrom(from._internal_chq_alive());
      break;
    }
    case kHcsAlive: {
      _internal_mutable_hcs_alive()->::megastructure::Message_HCS_Alive::MergeFrom(from._internal_hcs_alive());
      break;
    }
    case kMsqLoad: {
      _internal_mutable_msq_load()->::megastructure::Message_MSQ_Load::MergeFrom(from._internal_msq_load());
      break;
    }
    case kSmsLoad: {
      _internal_mutable_sms_load()->::megastructure::Message_SMS_Load::MergeFrom(from._internal_sms_load());
      break;
    }
    case kChqLoad: {
      _internal_mutable_chq_load()->::megastructure::Message_CHQ_Load::MergeFrom(from._internal_chq_load());
      break;
    }
    case kHcsLoad: {
      _internal_mutable_hcs_load()->::megastructure::Message_HCS_Load::MergeFrom(from._internal_hcs_load());
      break;
    }
    case kHcqBuffer: {
      _internal_mutable_hcq_buffer()->::megastructure::Message_HCQ_Buffer::MergeFrom(from._internal_hcq_buffer());
      break;
    }
    case kChsBuffer: {
      _internal_mutable_chs_buffer()->::megastructure::Message_CHS_Buffer::MergeFrom(from._internal_chs_buffer());
      break;
    }
    case kConfigMsg: {
      _internal_mutable_config_msg()->::megastructure::Message_Config::MergeFrom(from._internal_config_msg());
      break;
    }
    case kEgMsg: {
      _internal_mutable_eg_msg()->::megastructure::Message_EG_Msg::MergeFrom(from._internal_eg_msg());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:megastructure.Message)
}

void Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_megastructure_2eproto.base);
  clear_has_foobar();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:megastructure.Message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_foobar()) {
    clear_foobar();
  }
}

void Message::ArenaDtor(void* object) {
  Message* _this = reinterpret_cast< Message* >(object);
  (void)_this;
}
void Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_megastructure_2eproto.base);
  return *internal_default_instance();
}


void Message::clear_foobar() {
// @@protoc_insertion_point(one_of_clear_start:megastructure.Message)
  switch (foobar_case()) {
    case kSmqEnroll: {
      if (GetArena() == nullptr) {
        delete foobar_.smq_enroll_;
      }
      break;
    }
    case kMssEnroll: {
      if (GetArena() == nullptr) {
        delete foobar_.mss_enroll_;
      }
      break;
    }
    case kMsqAlive: {
      if (GetArena() == nullptr) {
        delete foobar_.msq_alive_;
      }
      break;
    }
    case kSmsAlive: {
      if (GetArena() == nullptr) {
        delete foobar_.sms_alive_;
      }
      break;
    }
    case kHcqEnroll: {
      if (GetArena() == nullptr) {
        delete foobar_.hcq_enroll_;
      }
      break;
    }
    case kChsEnroll: {
      if (GetArena() == nullptr) {
        delete foobar_.chs_enroll_;
      }
      break;
    }
    case kHcqEnrolleg: {
      if (GetArena() == nullptr) {
        delete foobar_.hcq_enrolleg_;
      }
      break;
    }
    case kChsEnrolleg: {
      if (GetArena() == nullptr) {
        delete foobar_.chs_enrolleg_;
      }
      break;
    }
    case kChqAlive: {
      if (GetArena() == nullptr) {
        delete foobar_.chq_alive_;
      }
      break;
    }
    case kHcsAlive: {
      if (GetArena() == nullptr) {
        delete foobar_.hcs_alive_;
      }
      break;
    }
    case kMsqLoad: {
      if (GetArena() == nullptr) {
        delete foobar_.msq_load_;
      }
      break;
    }
    case kSmsLoad: {
      if (GetArena() == nullptr) {
        delete foobar_.sms_load_;
      }
      break;
    }
    case kChqLoad: {
      if (GetArena() == nullptr) {
        delete foobar_.chq_load_;
      }
      break;
    }
    case kHcsLoad: {
      if (GetArena() == nullptr) {
        delete foobar_.hcs_load_;
      }
      break;
    }
    case kHcqBuffer: {
      if (GetArena() == nullptr) {
        delete foobar_.hcq_buffer_;
      }
      break;
    }
    case kChsBuffer: {
      if (GetArena() == nullptr) {
        delete foobar_.chs_buffer_;
      }
      break;
    }
    case kConfigMsg: {
      if (GetArena() == nullptr) {
        delete foobar_.config_msg_;
      }
      break;
    }
    case kEgMsg: {
      if (GetArena() == nullptr) {
        delete foobar_.eg_msg_;
      }
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FOOBAR_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:megastructure.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_foobar();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .megastructure.Message.SMQ_Enroll smq_enroll = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_smq_enroll(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.MSS_Enroll mss_enroll = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_mss_enroll(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.MSQ_Alive msq_alive = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_msq_alive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.SMS_Alive sms_alive = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sms_alive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.HCQ_Enroll hcq_enroll = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcq_enroll(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.CHS_Enroll chs_enroll = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_chs_enroll(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.HCQ_EnrollEG hcq_enrolleg = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcq_enrolleg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.CHS_EnrollEG chs_enrolleg = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_chs_enrolleg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.CHQ_Alive chq_alive = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_chq_alive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.HCS_Alive hcs_alive = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcs_alive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.MSQ_Load msq_load = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_msq_load(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.SMS_Load sms_load = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_sms_load(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.CHQ_Load chq_load = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_chq_load(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.HCS_Load hcs_load = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcs_load(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.HCQ_Buffer hcq_buffer = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_hcq_buffer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.CHS_Buffer chs_buffer = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_chs_buffer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.Config config_msg = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .megastructure.Message.EG_Msg eg_msg = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_eg_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:megastructure.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .megastructure.Message.SMQ_Enroll smq_enroll = 2;
  if (_internal_has_smq_enroll()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::smq_enroll(this), target, stream);
  }

  // .megastructure.Message.MSS_Enroll mss_enroll = 3;
  if (_internal_has_mss_enroll()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::mss_enroll(this), target, stream);
  }

  // .megastructure.Message.MSQ_Alive msq_alive = 4;
  if (_internal_has_msq_alive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::msq_alive(this), target, stream);
  }

  // .megastructure.Message.SMS_Alive sms_alive = 5;
  if (_internal_has_sms_alive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::sms_alive(this), target, stream);
  }

  // .megastructure.Message.HCQ_Enroll hcq_enroll = 6;
  if (_internal_has_hcq_enroll()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::hcq_enroll(this), target, stream);
  }

  // .megastructure.Message.CHS_Enroll chs_enroll = 7;
  if (_internal_has_chs_enroll()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::chs_enroll(this), target, stream);
  }

  // .megastructure.Message.HCQ_EnrollEG hcq_enrolleg = 8;
  if (_internal_has_hcq_enrolleg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::hcq_enrolleg(this), target, stream);
  }

  // .megastructure.Message.CHS_EnrollEG chs_enrolleg = 9;
  if (_internal_has_chs_enrolleg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::chs_enrolleg(this), target, stream);
  }

  // .megastructure.Message.CHQ_Alive chq_alive = 10;
  if (_internal_has_chq_alive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::chq_alive(this), target, stream);
  }

  // .megastructure.Message.HCS_Alive hcs_alive = 11;
  if (_internal_has_hcs_alive()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::hcs_alive(this), target, stream);
  }

  // .megastructure.Message.MSQ_Load msq_load = 12;
  if (_internal_has_msq_load()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::msq_load(this), target, stream);
  }

  // .megastructure.Message.SMS_Load sms_load = 13;
  if (_internal_has_sms_load()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::sms_load(this), target, stream);
  }

  // .megastructure.Message.CHQ_Load chq_load = 14;
  if (_internal_has_chq_load()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::chq_load(this), target, stream);
  }

  // .megastructure.Message.HCS_Load hcs_load = 15;
  if (_internal_has_hcs_load()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::hcs_load(this), target, stream);
  }

  // .megastructure.Message.HCQ_Buffer hcq_buffer = 16;
  if (_internal_has_hcq_buffer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::hcq_buffer(this), target, stream);
  }

  // .megastructure.Message.CHS_Buffer chs_buffer = 17;
  if (_internal_has_chs_buffer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::chs_buffer(this), target, stream);
  }

  // .megastructure.Message.Config config_msg = 18;
  if (_internal_has_config_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::config_msg(this), target, stream);
  }

  // .megastructure.Message.EG_Msg eg_msg = 19;
  if (_internal_has_eg_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::eg_msg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:megastructure.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:megastructure.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (foobar_case()) {
    // .megastructure.Message.SMQ_Enroll smq_enroll = 2;
    case kSmqEnroll: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.smq_enroll_);
      break;
    }
    // .megastructure.Message.MSS_Enroll mss_enroll = 3;
    case kMssEnroll: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.mss_enroll_);
      break;
    }
    // .megastructure.Message.MSQ_Alive msq_alive = 4;
    case kMsqAlive: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.msq_alive_);
      break;
    }
    // .megastructure.Message.SMS_Alive sms_alive = 5;
    case kSmsAlive: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.sms_alive_);
      break;
    }
    // .megastructure.Message.HCQ_Enroll hcq_enroll = 6;
    case kHcqEnroll: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcq_enroll_);
      break;
    }
    // .megastructure.Message.CHS_Enroll chs_enroll = 7;
    case kChsEnroll: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chs_enroll_);
      break;
    }
    // .megastructure.Message.HCQ_EnrollEG hcq_enrolleg = 8;
    case kHcqEnrolleg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcq_enrolleg_);
      break;
    }
    // .megastructure.Message.CHS_EnrollEG chs_enrolleg = 9;
    case kChsEnrolleg: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chs_enrolleg_);
      break;
    }
    // .megastructure.Message.CHQ_Alive chq_alive = 10;
    case kChqAlive: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chq_alive_);
      break;
    }
    // .megastructure.Message.HCS_Alive hcs_alive = 11;
    case kHcsAlive: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcs_alive_);
      break;
    }
    // .megastructure.Message.MSQ_Load msq_load = 12;
    case kMsqLoad: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.msq_load_);
      break;
    }
    // .megastructure.Message.SMS_Load sms_load = 13;
    case kSmsLoad: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.sms_load_);
      break;
    }
    // .megastructure.Message.CHQ_Load chq_load = 14;
    case kChqLoad: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chq_load_);
      break;
    }
    // .megastructure.Message.HCS_Load hcs_load = 15;
    case kHcsLoad: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcs_load_);
      break;
    }
    // .megastructure.Message.HCQ_Buffer hcq_buffer = 16;
    case kHcqBuffer: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.hcq_buffer_);
      break;
    }
    // .megastructure.Message.CHS_Buffer chs_buffer = 17;
    case kChsBuffer: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.chs_buffer_);
      break;
    }
    // .megastructure.Message.Config config_msg = 18;
    case kConfigMsg: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.config_msg_);
      break;
    }
    // .megastructure.Message.EG_Msg eg_msg = 19;
    case kEgMsg: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *foobar_.eg_msg_);
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:megastructure.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:megastructure.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:megastructure.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:megastructure.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.foobar_case()) {
    case kSmqEnroll: {
      _internal_mutable_smq_enroll()->::megastructure::Message_SMQ_Enroll::MergeFrom(from._internal_smq_enroll());
      break;
    }
    case kMssEnroll: {
      _internal_mutable_mss_enroll()->::megastructure::Message_MSS_Enroll::MergeFrom(from._internal_mss_enroll());
      break;
    }
    case kMsqAlive: {
      _internal_mutable_msq_alive()->::megastructure::Message_MSQ_Alive::MergeFrom(from._internal_msq_alive());
      break;
    }
    case kSmsAlive: {
      _internal_mutable_sms_alive()->::megastructure::Message_SMS_Alive::MergeFrom(from._internal_sms_alive());
      break;
    }
    case kHcqEnroll: {
      _internal_mutable_hcq_enroll()->::megastructure::Message_HCQ_Enroll::MergeFrom(from._internal_hcq_enroll());
      break;
    }
    case kChsEnroll: {
      _internal_mutable_chs_enroll()->::megastructure::Message_CHS_Enroll::MergeFrom(from._internal_chs_enroll());
      break;
    }
    case kHcqEnrolleg: {
      _internal_mutable_hcq_enrolleg()->::megastructure::Message_HCQ_EnrollEG::MergeFrom(from._internal_hcq_enrolleg());
      break;
    }
    case kChsEnrolleg: {
      _internal_mutable_chs_enrolleg()->::megastructure::Message_CHS_EnrollEG::MergeFrom(from._internal_chs_enrolleg());
      break;
    }
    case kChqAlive: {
      _internal_mutable_chq_alive()->::megastructure::Message_CHQ_Alive::MergeFrom(from._internal_chq_alive());
      break;
    }
    case kHcsAlive: {
      _internal_mutable_hcs_alive()->::megastructure::Message_HCS_Alive::MergeFrom(from._internal_hcs_alive());
      break;
    }
    case kMsqLoad: {
      _internal_mutable_msq_load()->::megastructure::Message_MSQ_Load::MergeFrom(from._internal_msq_load());
      break;
    }
    case kSmsLoad: {
      _internal_mutable_sms_load()->::megastructure::Message_SMS_Load::MergeFrom(from._internal_sms_load());
      break;
    }
    case kChqLoad: {
      _internal_mutable_chq_load()->::megastructure::Message_CHQ_Load::MergeFrom(from._internal_chq_load());
      break;
    }
    case kHcsLoad: {
      _internal_mutable_hcs_load()->::megastructure::Message_HCS_Load::MergeFrom(from._internal_hcs_load());
      break;
    }
    case kHcqBuffer: {
      _internal_mutable_hcq_buffer()->::megastructure::Message_HCQ_Buffer::MergeFrom(from._internal_hcq_buffer());
      break;
    }
    case kChsBuffer: {
      _internal_mutable_chs_buffer()->::megastructure::Message_CHS_Buffer::MergeFrom(from._internal_chs_buffer());
      break;
    }
    case kConfigMsg: {
      _internal_mutable_config_msg()->::megastructure::Message_Config::MergeFrom(from._internal_config_msg());
      break;
    }
    case kEgMsg: {
      _internal_mutable_eg_msg()->::megastructure::Message_EG_Msg::MergeFrom(from._internal_eg_msg());
      break;
    }
    case FOOBAR_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:megastructure.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:megastructure.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(foobar_, other->foobar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace megastructure
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::megastructure::Message_SMQ_Enroll* Arena::CreateMaybeMessage< ::megastructure::Message_SMQ_Enroll >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_SMQ_Enroll >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_MSS_Enroll* Arena::CreateMaybeMessage< ::megastructure::Message_MSS_Enroll >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_MSS_Enroll >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_MSQ_Alive* Arena::CreateMaybeMessage< ::megastructure::Message_MSQ_Alive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_MSQ_Alive >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_SMS_Alive* Arena::CreateMaybeMessage< ::megastructure::Message_SMS_Alive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_SMS_Alive >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_HCQ_Enroll* Arena::CreateMaybeMessage< ::megastructure::Message_HCQ_Enroll >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_HCQ_Enroll >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_CHS_Enroll* Arena::CreateMaybeMessage< ::megastructure::Message_CHS_Enroll >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_CHS_Enroll >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_HCQ_EnrollEG* Arena::CreateMaybeMessage< ::megastructure::Message_HCQ_EnrollEG >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_HCQ_EnrollEG >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_CHS_EnrollEG* Arena::CreateMaybeMessage< ::megastructure::Message_CHS_EnrollEG >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_CHS_EnrollEG >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_CHQ_Alive* Arena::CreateMaybeMessage< ::megastructure::Message_CHQ_Alive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_CHQ_Alive >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_HCS_Alive* Arena::CreateMaybeMessage< ::megastructure::Message_HCS_Alive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_HCS_Alive >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_MSQ_Load* Arena::CreateMaybeMessage< ::megastructure::Message_MSQ_Load >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_MSQ_Load >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_SMS_Load* Arena::CreateMaybeMessage< ::megastructure::Message_SMS_Load >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_SMS_Load >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_CHQ_Load* Arena::CreateMaybeMessage< ::megastructure::Message_CHQ_Load >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_CHQ_Load >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_HCS_Load* Arena::CreateMaybeMessage< ::megastructure::Message_HCS_Load >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_HCS_Load >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_HCQ_Buffer* Arena::CreateMaybeMessage< ::megastructure::Message_HCQ_Buffer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_HCQ_Buffer >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_CHS_Buffer* Arena::CreateMaybeMessage< ::megastructure::Message_CHS_Buffer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_CHS_Buffer >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Load_MSQ* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Load_MSQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Load_MSQ >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Load_SMS* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Load_SMS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Load_SMS >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Load_CHQ* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Load_CHQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Load_CHQ >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Load_HCS* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Load_HCS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Load_HCS >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Load* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Load >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Load >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Save_MSQ* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Save_MSQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Save_MSQ >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Save_SMS* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Save_SMS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Save_SMS >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Save_CHQ* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Save_CHQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Save_CHQ >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Save_HCS* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Save_HCS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Save_HCS >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config_Save* Arena::CreateMaybeMessage< ::megastructure::Message_Config_Save >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config_Save >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_Config* Arena::CreateMaybeMessage< ::megastructure::Message_Config >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_Config >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Request_Read* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Request_Read >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Request_Read >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Request_Write* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Request_Write >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Request_Write >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Request_Lock* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Request_Lock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Request_Lock >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Request_Unlock* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Request_Unlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Request_Unlock >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Request* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Response* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Error* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Error >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Error >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg_Event* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg_Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg_Event >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message_EG_Msg* Arena::CreateMaybeMessage< ::megastructure::Message_EG_Msg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message_EG_Msg >(arena);
}
template<> PROTOBUF_NOINLINE ::megastructure::Message* Arena::CreateMaybeMessage< ::megastructure::Message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::megastructure::Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
