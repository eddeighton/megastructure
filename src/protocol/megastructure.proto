
syntax = "proto3";

package megastructure;

message Message
{
	//int32 id = 1;

	//MSQ : Master Slave Request
	//MSS : Master Slave Response
	//SMQ : Slave Master Request
	//SMS : Slave Master Response
	
	//CHQ : Coordinator Host Request
	//CHS : Coordinator Host Response
	//HCQ : Host Coordinator Request
	//HCS : Host Coordinator Response

	message SMQ_Enroll
	{
		string slavename = 1;
	}
	message MSS_Enroll
	{
		bool success = 1;
		string programname = 2;
	}
	
	message MSQ_Alive
	{
		string slavename = 1;
	}
	message SMS_Alive
	{
		bool success = 1;
	}
	
	
	message HCQ_Enroll
	{
		string processname = 1;
		string unique = 2;
	}
	message CHS_Enroll
	{
		bool success = 1;
		string workspacepath = 2;
		string slavename = 3;
	}
	
	message HCQ_EnrollEG
	{
		string unique = 1;
	}
	message CHS_EnrollEG
	{
		bool success = 1;
	}
	
	message CHQ_Alive
	{
		string processname = 1;
	}
	message HCS_Alive
	{
		bool success = 1;
	}
	
	message MSQ_Load
	{
		string programname = 1;
	}
	message SMS_Load
	{
		bool success = 1;
	}
	
	message CHQ_Load
	{
		string hostname = 1;
		string programname = 2;
	}
	message HCS_Load
	{
		bool success = 1;
	}
	
	message HCQ_Buffer
	{
		string buffername = 1;
		uint32 size = 2;
	}
	message CHS_Buffer
	{
		string buffername = 1;
		string sharedname = 2;
	}
	
	//eg protocol
	//host to coordinator request read,write,call,unlock
	
	message EG_Msg
	{
		uint32 type = 1;
		uint32 instance = 2;
		uint32 cycle = 3;
		
		message Request
		{
			uint32 coordinator = 1;
			uint32 host = 2;
			
			message Read
			{
			}
			message Write
			{
				string value = 1;
			}
			message Call
			{
				string args = 1;
			}
			message Lock
			{
			}
			message Unlock
			{
			}
			
			oneof foobar
			{
				//eg protocol
				Read   	read   	= 3;
				Write  	write  	= 4;
				Call    call    = 5;
				Lock    lock    = 6;
				Unlock  unlock  = 7;
			}
		}
	
		message Response
		{
			uint32 coordinator = 1;
			uint32 host = 2;
			string value = 3;
		}
		
		message Event
		{
			string value = 1;
		}
		
		oneof foobar
		{
			//eg protocol
			Request   request   = 4;
			Response  response  = 5;
			Event     event     = 6;
		}
	}
	
	
	oneof foobar
	{
		SMQ_Enroll smq_enroll = 2;
		MSS_Enroll mss_enroll = 3;
		
		MSQ_Alive msq_alive = 4;
		SMS_Alive sms_alive = 5;
		
		HCQ_Enroll hcq_enroll = 6;
		CHS_Enroll chs_enroll = 7;
		
		HCQ_EnrollEG hcq_enrolleg = 8;
		CHS_EnrollEG chs_enrolleg = 9;
		
		CHQ_Alive chq_alive = 10;
		HCS_Alive hcs_alive = 11;
		
		MSQ_Load msq_load = 12;
		SMS_Load sms_load = 13;
		
		CHQ_Load chq_load = 14;
		HCS_Load hcs_load = 15;
		
		HCQ_Buffer hcq_buffer = 16;
		CHS_Buffer chs_buffer = 17;
		
		EG_Msg eg_msg = 18;
	}
	
}
